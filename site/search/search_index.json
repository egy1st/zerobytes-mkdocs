{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to ZeroBytes.One If you are asking yourself, why this website called zero bytes, then let me tell you a secret \"I just create zeros to give you the power to create complete bytes\". In a nutshell, Zero Bytes is a journey from 0 ==> 1, from NULL to totally Full, from no thing to som e thing, from 0 000 0000 ==> 0000 000 1 What Will You Get From These Bytes? Keep up with the future with in-demand data science knowledge. Top companies need data science skills. Learn at your own pace, Where Free means Premium. Python: A complete Byte MS Excel: step by step DenMune: Density-based clustering DenMune: Documentation MS Excel: Interactive Training Counting in 13 Languages including Arabic, English & Chinese ZeroBytes: When less means more \"Obviously, there is a trade-off between gaining knowledge and the costly time and money to obtain these knowledge. In ZeroBytes we believe that knowledge should be available to learner in premium, but at no cost.\" \"When Free means Premium. When less means More. This is the most complex formula we master in ZeroBytes. We just started.. There are many things that seem impossible only so long as one does not attempt them.\" \"Our mission is to make the Arab world a better place to learn, gain knowledge and apply these knowledge to solve real-life problems that is result in leading a better life.\" Please see the projects license for further details.","title":"Home"},{"location":"#welcome-to-zerobytesone","text":"If you are asking yourself, why this website called zero bytes, then let me tell you a secret \"I just create zeros to give you the power to create complete bytes\". In a nutshell, Zero Bytes is a journey from 0 ==> 1, from NULL to totally Full, from no thing to som e thing, from 0 000 0000 ==> 0000 000 1","title":"Welcome to ZeroBytes.One"},{"location":"#what-will-you-get-from-these-bytes","text":"Keep up with the future with in-demand data science knowledge. Top companies need data science skills. Learn at your own pace, Where Free means Premium. Python: A complete Byte MS Excel: step by step DenMune: Density-based clustering DenMune: Documentation MS Excel: Interactive Training Counting in 13 Languages including Arabic, English & Chinese","title":"What Will You Get From These Bytes?"},{"location":"#zerobytes-when-less-means-more","text":"\"Obviously, there is a trade-off between gaining knowledge and the costly time and money to obtain these knowledge. In ZeroBytes we believe that knowledge should be available to learner in premium, but at no cost.\" \"When Free means Premium. When less means More. This is the most complex formula we master in ZeroBytes. We just started.. There are many things that seem impossible only so long as one does not attempt them.\" \"Our mission is to make the Arab world a better place to learn, gain knowledge and apply these knowledge to solve real-life problems that is result in leading a better life.\" Please see the projects license for further details.","title":"ZeroBytes: When less means more"},{"location":"about/","text":"About Me: Mohamed Ali Abbas Experienced Data Analyst with a demonstrated history of working in the government administration industry. Skilled in Python, C++ and Statistical Data Analysis. strong information technology professional with a MSc in Computer Science and PhD in Information Technology. Focused in data mining, machine learning and pattern recognition. A Recognized Instructor in many reputable organizations.","title":"About"},{"location":"about/#about-me-mohamed-ali-abbas","text":"Experienced Data Analyst with a demonstrated history of working in the government administration industry. Skilled in Python, C++ and Statistical Data Analysis. strong information technology professional with a MSc in Computer Science and PhD in Information Technology. Focused in data mining, machine learning and pattern recognition. A Recognized Instructor in many reputable organizations.","title":"About Me: Mohamed Ali Abbas"},{"location":"license/","text":"BSD 3-Clause License Copyright (c) [2021], [Mohamed Ali Abbas] Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"BSD 3-Clause License"},{"location":"license/#bsd-3-clause-license","text":"Copyright (c) [2021], [Mohamed Ali Abbas] Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"BSD 3-Clause License"},{"location":"Certificates/","text":"Am I Certified? List of my Obtained Certificates: IBM-Data-Science-Professional-Certificate","title":"Certificates"},{"location":"Certificates/#am-i-certified","text":"List of my Obtained Certificates: IBM-Data-Science-Professional-Certificate","title":"Am I Certified?"},{"location":"Certificates/IBM/","text":"IBM-Data-Science-Professional-Certificate Back in January, 2019, I did these projects many years ago as a requirement to obtain my IBM Data Science Professional Certificate. About This Certificate Certificate name: Data Science Professional Certificate Certificate URL: https://coursera.org/share/5cf76b4a724b6f51c8aafdcdd1ed8396 Issued by Coursera Authorized by IBM I have been awarded 13 badges on obtaining this certificate https://www.credly.com/users/mohamed-abbas.1f43f901/badges https://www.credly.com/org/ibm/badge/data-science-professional-certificate-v2 What Credly tells about me The badge earner is ready for a career in data science with demonstrated ability to solve for real-world problems. They can apply Data Science methodology - work with Jupyter notebooks - create Python apps - access relational databases using SQL & Python - use Python libraries to generate data visualizations - perform data analysis using Pandas - construct & evaluate Machine Learning (ML) models using Scikit-learn & SciPy and apply data science & ML techniques to real location data sets. Earning Criteria Complete all courses in the IBM Data Science Professional Certificate program on Coursera (includes quizzes, hands-on assignments and projects), and earn the following badges: Data Science Orientation Tools for Data Science Data Science Methodology Python for Data Science and AI Databases and SQL for Data Science Data Visualization with Python Data Analysis with Python Machine Learning with Python Applied Data Science Capstone Python Project for Data Science Receive the Data Science Professional Certificate from Coursera. Haga clic aqu\u00ed para la versi\u00f3n en Espa\u00f1ol: Ciencia de Datos de IBM Professional Certificate Endorsements American Council on Education CREDIT This credential has been successfully evaluated by the American Council on Education for college credit. It is recommended for a total of 12 college credits. For more information about ACE Learning Evaluations, visit www.acenet.edu. Skills AI Artificial Intelligence Bokeh Classification Clustering Data Analysis Database Data Science Data Visualization Db2 Folium Foursquare IBM Cloud Jupyter Location Machine Learning Matplotlib Methodology ML Notebook NumPy Pandas Python Recommender Systems Regression RStudio Scikit-learn SciPy Seaborn SQL Studio Watson Zeppelin Certificate Verification https://www.coursera.org/account/accomplishments/specialization/certificate/7ECY2S6SQBEJ https://www.credly.com/badges/3bcd7d62-335a-462f-9075-68e17e96ae12","title":"IBM-Data-Science-Professional-Certificate"},{"location":"Certificates/IBM/#ibm-data-science-professional-certificate","text":"Back in January, 2019, I did these projects many years ago as a requirement to obtain my IBM Data Science Professional Certificate.","title":"IBM-Data-Science-Professional-Certificate"},{"location":"Certificates/IBM/#about-this-certificate","text":"Certificate name: Data Science Professional Certificate Certificate URL: https://coursera.org/share/5cf76b4a724b6f51c8aafdcdd1ed8396 Issued by Coursera Authorized by IBM","title":"About This Certificate"},{"location":"Certificates/IBM/#i-have-been-awarded-13-badges-on-obtaining-this-certificate","text":"https://www.credly.com/users/mohamed-abbas.1f43f901/badges https://www.credly.com/org/ibm/badge/data-science-professional-certificate-v2","title":"I have been awarded 13 badges on obtaining this certificate"},{"location":"Certificates/IBM/#what-credly-tells-about-me","text":"The badge earner is ready for a career in data science with demonstrated ability to solve for real-world problems. They can apply Data Science methodology - work with Jupyter notebooks - create Python apps - access relational databases using SQL & Python - use Python libraries to generate data visualizations - perform data analysis using Pandas - construct & evaluate Machine Learning (ML) models using Scikit-learn & SciPy and apply data science & ML techniques to real location data sets.","title":"What Credly tells about me"},{"location":"Certificates/IBM/#earning-criteria","text":"Complete all courses in the IBM Data Science Professional Certificate program on Coursera (includes quizzes, hands-on assignments and projects), and earn the following badges: Data Science Orientation Tools for Data Science Data Science Methodology Python for Data Science and AI Databases and SQL for Data Science Data Visualization with Python Data Analysis with Python Machine Learning with Python Applied Data Science Capstone Python Project for Data Science Receive the Data Science Professional Certificate from Coursera. Haga clic aqu\u00ed para la versi\u00f3n en Espa\u00f1ol: Ciencia de Datos de IBM Professional Certificate","title":"Earning Criteria"},{"location":"Certificates/IBM/#endorsements","text":"American Council on Education CREDIT This credential has been successfully evaluated by the American Council on Education for college credit. It is recommended for a total of 12 college credits. For more information about ACE Learning Evaluations, visit www.acenet.edu.","title":"Endorsements"},{"location":"Certificates/IBM/#skills","text":"AI Artificial Intelligence Bokeh Classification Clustering Data Analysis Database Data Science Data Visualization Db2 Folium Foursquare IBM Cloud Jupyter Location Machine Learning Matplotlib Methodology ML Notebook NumPy Pandas Python Recommender Systems Regression RStudio Scikit-learn SciPy Seaborn SQL Studio Watson Zeppelin","title":"Skills"},{"location":"Certificates/IBM/#certificate-verification","text":"https://www.coursera.org/account/accomplishments/specialization/certificate/7ECY2S6SQBEJ https://www.credly.com/badges/3bcd7d62-335a-462f-9075-68e17e96ae12","title":"Certificate Verification"},{"location":"DC/","text":"ML Bytes Dynamic Components Application Protector Binding Recordset Data Manager Data Entry Validator Dynamic Report Form Flipper Form Translator Help Authority Image Button Num2Text","title":"Dynamic Components"},{"location":"DC/#ml-bytes","text":"Dynamic Components Application Protector Binding Recordset Data Manager Data Entry Validator Dynamic Report Form Flipper Form Translator Help Authority Image Button Num2Text","title":"ML Bytes"},{"location":"DC/Application%20Protector/","text":"DynamicComponents - AppProtector----- Powered by Overview DC.AppProtecor is an application that allows you to protect Windows executable files against piracy. Using multi level encryption algorithms . Thanks to Nested Layers Protection (NLP), new protection technology we adapt in our protection system. DC.AppProtecor Dialog box is generated on the fly so any hackers attempt to remove its resource will fail. DC.AppProtecor may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. DC.AppProtecor allow you to release your trail version with its restriction of days limit. DC.AppProtecor has 3 levels of encryption algorithms , with about 50 million collection ,each encryption algorithms of this 50 million collection has huge variety of activation key you can generate. If you are losing sales to software , Stop it now by our advanced, secure software protection system . It is very easy to include in your developing project with only 3 lines of code . EgyFirst has done a lot of work for you. You define few lines of code and we keep you safe away from hackers attempt. Features ----- Do you know that DC.AppProtector itself protected by itself ?!!! Few Lines to add in your Form_Load event and you will get full secure software protection system. You can: Define your multi level encryption algorithms. Define your Free Trail days limit Define your customized message appears on protection dialog box Define your URL where customers can purchase your product Example: Dim MyProtection As New DynamicComponents.AppProtector() Dim ProductName As String Dim CompanyInfo As String // Customized author message CompanyInfo = \"Company Name: EgyFist Software , inc.\" + vbCrLf // vbCrLf force new line CompanyInfo += \"Home Page: htpp://www.egyfirst.com\" + vbCrLf CompanyInfo += \"License: Free 30 Days Trail Version\" ProductName = \"DC AppProtector v1.0\" // Code of Protection MyProtection. SetInformation (ProductName, CompanyInfo, \"http://www.egyfirst.com/buynow/\") MyProtection. SetAlgorithms (1234, 56, 78) MyProtection. SetLicense ( 30) // may be ignored , since it is by default 30 days MyProtection. ShowAuthor () Now you can generate huge numbers of activation key using Activation Key Utility System Requirements ----- DC.AppProtector runs as a COM class for included in any developing langauge support COM based application as Visual Basic , Visual C++ , Borland C++ , Delphi and others .. Installing DC.AppProtector----- The DC.AppProtector setup program will automatically register the DC_AppProtector10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.AppProtector To include DC.AppProtector in your project From Project menu select add reference Push Browse button to locate your AppProtector10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.AppProtector ----- The only file needs to be distributed with DC.AppProtector COM applications is DC_AppProtector10 .dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 SetInformation Function----- SetInformation function enables you to Define your customized message appears on protection dialog box. it include 3 parameters Product info Company info URL where customers can purchase your product by clicking Buy Now Button on Protection dialog box Syntax: SetInformation(ByVal str_ProductName As String, ByVal str_CompanyInfo As String, ByVal str_BuyNow_URL As String) Example: Dim CompanyInfo As String CompanyInfo = \"Company Name: EgyFirst Software , inc.\" + vbCrLf //'vbcrlf force new line CompanyInfo += \"Home Page: htpp://www.egyfirst.com\" + vbCrLf CompanyInfo += \"License: Free 30 Days Trail Version\" MyProtection.SetInformation(\"DC AppProtector v1.0\", CompanyInfo, \"http://www.egyfirst.com/buynow/\") SetAlgorithms Function Encryption Algorithms define the method DC.AppProtecor adapt to generate its activation keys related to it. DC.AppProtecor has 4 levels of encryption algorithms first level has 6000 choices (must be between 1000 and 7000) second level has 90 choices (must be between 10 and 99) Third level has 90 choices (must be between 10 and 99) Fourth level is a string (must be 7 characters length) if you develop more than one product and protect them all with the same DC.AppProtector , then every product must be addicated with a different id so first product may have algorithms like (1234, 56, 78,\"abcdefg\") and second product may have algorithms like (1234, 56, 78,\"aaabccc\") and third product may have algorithms like (5555, 66, 77,\"egyfirst\") this mean you can define similar or different algorithms to multi protected product but every product must have unique ID which addicated by int_Algorithms4 parameter Caution: if you develop more than one product and protect them all with the same product id , then any registration to one of them will register the rest Syntax: SetAlgorithms(ByVal int_Algorithms1 As Integer, ByVal int_Algorithms2 As Integer, ByVal int_Algorithms3 As Integer, ByVal str_Algorithms4 As string) Example: SetAlgorithms(1234, 56, 78,\"abcdefg\") SetLicense Function----- SetLicense Function enables you to define trail version days limit if this assignment ignored , it will be by default 30 days Syntax: Public Sub SetLicense(ByVal int_DaysLimit As Integer ) Example: SetLicense(15) ShowAuthor Function----- This function is the heart of your protection and it is responsible to popup the protection dialog box this function must be called at the end end of your protection code block Syntax: Function ShowAuthor() No Parameter required with his function Example : ShowAuthor() NotLicensed----- NotLicensed is public variable addicte to state of your product license , so you can do the proper action it will be True if protected product is registered or within trial period . Syntax : Public NotLicensed As Boolean = False Example : Dim MyProtection As New DynamicComponents.AppProtector() If MyProtection.NotLicensed Then Exit Sub Activation Key Utility Using Activation Key utility you can generate huge numbers of randomize activation key depends on algorithms you use , so activation keys collection generated (for example) by SetAlgorithms(1234,56,78) will differ completely from one generated using SetAlgorithms(1111,11,11) and differ from any other algorithms . Example: Here some activation keys generated using algorithms SetAlgorithms(1234,56,78) SetAlgorithms(1111,11,11) 2533-177-552-708-7856 2167-115-069-275-1206 2670-209-627-395-7963 2933-292-542-319-1226 2858-259-683-679-4606 3781-640-481-975-8749 3210-373-873-517-1567 3784-642-049-096-4889 3331-419-780-812-0071 3797-648-869-680-0506 2412-152-129-710-8440 3767-633-202-668-7204 3451-468-894-209-3279 3607-553-914-590-1600 2222-117-365-198-8042 2381-153-727-457-2744 3193-367-706-720-5254 3923-717-512-323-8126 2616-196-555-752-0925 3805-653-091-025-3862 just remember that there are 50 millions Encrypted algorithms available for you to use, generated from any combination of (*****,**,**) where first algorithms must be between 1000 and 7000 ===>(7000 - 1000) ===> 6000 and second algorithms must be between 10 and 90 ===>(90 - 10) ===> 80 and third algorithms must be between 10 and 90 ===>(90 - 10) ===> 80 this is (6000*80*80) ===> 4,800,000 different combination Tutorial This tutorial describe all features supported by DC.AppProtector also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Application Protector\\Tutorial\\ This code must be in first form loaded in your project Private Sub TestForm_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Dim MyProtection As New DynamicComponents.AppProtector() Dim ProductName As String Dim CompanyInfo As String // Customized author message CompanyInfo = \"Company Name: EgyFist Software , inc.\" + vbCrLf // vbCrLf force new line CompanyInfo += \"Home Page: htpp://www.egyfirst.com\" + vbCrLf CompanyInfo += \"License: Free 30 Days Trail Version\" ProductName = \"DC AppProtector v1.0\" // Code of Protection MyProtection. SetInformation (ProductName, CompanyInfo, \"http://www.egyfirst.com/buynow/\") MyProtection. SetAlgorithms (1234, 56, 78) MyProtection. SetLicense ( 30) // may be ignored , since it is by default 30 days MyProtection. ShowAuthor () End Sub Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.AppProtector Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC AppProtector Version: 1.0","title":"**DynamicComponents - AppProtector-----**"},{"location":"DC/Application%20Protector/#dynamiccomponents-appprotector-","text":"Powered by","title":"DynamicComponents - AppProtector-----"},{"location":"DC/Application%20Protector/#overview","text":"DC.AppProtecor is an application that allows you to protect Windows executable files against piracy. Using multi level encryption algorithms . Thanks to Nested Layers Protection (NLP), new protection technology we adapt in our protection system. DC.AppProtecor Dialog box is generated on the fly so any hackers attempt to remove its resource will fail. DC.AppProtecor may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. DC.AppProtecor allow you to release your trail version with its restriction of days limit. DC.AppProtecor has 3 levels of encryption algorithms , with about 50 million collection ,each encryption algorithms of this 50 million collection has huge variety of activation key you can generate. If you are losing sales to software , Stop it now by our advanced, secure software protection system . It is very easy to include in your developing project with only 3 lines of code . EgyFirst has done a lot of work for you. You define few lines of code and we keep you safe away from hackers attempt.","title":"Overview"},{"location":"DC/Application%20Protector/#features-","text":"Do you know that DC.AppProtector itself protected by itself ?!!! Few Lines to add in your Form_Load event and you will get full secure software protection system. You can: Define your multi level encryption algorithms. Define your Free Trail days limit Define your customized message appears on protection dialog box Define your URL where customers can purchase your product Example: Dim MyProtection As New DynamicComponents.AppProtector() Dim ProductName As String Dim CompanyInfo As String // Customized author message CompanyInfo = \"Company Name: EgyFist Software , inc.\" + vbCrLf // vbCrLf force new line CompanyInfo += \"Home Page: htpp://www.egyfirst.com\" + vbCrLf CompanyInfo += \"License: Free 30 Days Trail Version\" ProductName = \"DC AppProtector v1.0\" // Code of Protection MyProtection. SetInformation (ProductName, CompanyInfo, \"http://www.egyfirst.com/buynow/\") MyProtection. SetAlgorithms (1234, 56, 78) MyProtection. SetLicense ( 30) // may be ignored , since it is by default 30 days MyProtection. ShowAuthor () Now you can generate huge numbers of activation key using Activation Key Utility","title":"Features -----"},{"location":"DC/Application%20Protector/#system-requirements-","text":"DC.AppProtector runs as a COM class for included in any developing langauge support COM based application as Visual Basic , Visual C++ , Borland C++ , Delphi and others ..","title":"System Requirements -----"},{"location":"DC/Application%20Protector/#installing-dcappprotector-","text":"The DC.AppProtector setup program will automatically register the DC_AppProtector10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.AppProtector-----"},{"location":"DC/Application%20Protector/#including-dcappprotector","text":"To include DC.AppProtector in your project From Project menu select add reference Push Browse button to locate your AppProtector10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.AppProtector"},{"location":"DC/Application%20Protector/#deploying-dcappprotector-","text":"The only file needs to be distributed with DC.AppProtector COM applications is DC_AppProtector10 .dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.AppProtector -----"},{"location":"DC/Application%20Protector/#setinformation-function-","text":"SetInformation function enables you to Define your customized message appears on protection dialog box. it include 3 parameters Product info Company info URL where customers can purchase your product by clicking Buy Now Button on Protection dialog box Syntax: SetInformation(ByVal str_ProductName As String, ByVal str_CompanyInfo As String, ByVal str_BuyNow_URL As String) Example: Dim CompanyInfo As String CompanyInfo = \"Company Name: EgyFirst Software , inc.\" + vbCrLf //'vbcrlf force new line CompanyInfo += \"Home Page: htpp://www.egyfirst.com\" + vbCrLf CompanyInfo += \"License: Free 30 Days Trail Version\" MyProtection.SetInformation(\"DC AppProtector v1.0\", CompanyInfo, \"http://www.egyfirst.com/buynow/\")","title":"SetInformation Function-----"},{"location":"DC/Application%20Protector/#setalgorithms-function","text":"Encryption Algorithms define the method DC.AppProtecor adapt to generate its activation keys related to it. DC.AppProtecor has 4 levels of encryption algorithms first level has 6000 choices (must be between 1000 and 7000) second level has 90 choices (must be between 10 and 99) Third level has 90 choices (must be between 10 and 99) Fourth level is a string (must be 7 characters length) if you develop more than one product and protect them all with the same DC.AppProtector , then every product must be addicated with a different id so first product may have algorithms like (1234, 56, 78,\"abcdefg\") and second product may have algorithms like (1234, 56, 78,\"aaabccc\") and third product may have algorithms like (5555, 66, 77,\"egyfirst\") this mean you can define similar or different algorithms to multi protected product but every product must have unique ID which addicated by int_Algorithms4 parameter Caution: if you develop more than one product and protect them all with the same product id , then any registration to one of them will register the rest Syntax: SetAlgorithms(ByVal int_Algorithms1 As Integer, ByVal int_Algorithms2 As Integer, ByVal int_Algorithms3 As Integer, ByVal str_Algorithms4 As string) Example: SetAlgorithms(1234, 56, 78,\"abcdefg\")","title":"SetAlgorithms Function"},{"location":"DC/Application%20Protector/#setlicense-function-","text":"SetLicense Function enables you to define trail version days limit if this assignment ignored , it will be by default 30 days Syntax: Public Sub SetLicense(ByVal int_DaysLimit As Integer ) Example: SetLicense(15)","title":"SetLicense Function-----"},{"location":"DC/Application%20Protector/#showauthor-function-","text":"This function is the heart of your protection and it is responsible to popup the protection dialog box this function must be called at the end end of your protection code block Syntax: Function ShowAuthor() No Parameter required with his function Example : ShowAuthor()","title":"ShowAuthor Function-----"},{"location":"DC/Application%20Protector/#notlicensed-","text":"NotLicensed is public variable addicte to state of your product license , so you can do the proper action it will be True if protected product is registered or within trial period . Syntax : Public NotLicensed As Boolean = False Example : Dim MyProtection As New DynamicComponents.AppProtector() If MyProtection.NotLicensed Then Exit Sub","title":"NotLicensed-----"},{"location":"DC/Application%20Protector/#activation-key-utility","text":"Using Activation Key utility you can generate huge numbers of randomize activation key depends on algorithms you use , so activation keys collection generated (for example) by SetAlgorithms(1234,56,78) will differ completely from one generated using SetAlgorithms(1111,11,11) and differ from any other algorithms . Example: Here some activation keys generated using algorithms SetAlgorithms(1234,56,78) SetAlgorithms(1111,11,11) 2533-177-552-708-7856 2167-115-069-275-1206 2670-209-627-395-7963 2933-292-542-319-1226 2858-259-683-679-4606 3781-640-481-975-8749 3210-373-873-517-1567 3784-642-049-096-4889 3331-419-780-812-0071 3797-648-869-680-0506 2412-152-129-710-8440 3767-633-202-668-7204 3451-468-894-209-3279 3607-553-914-590-1600 2222-117-365-198-8042 2381-153-727-457-2744 3193-367-706-720-5254 3923-717-512-323-8126 2616-196-555-752-0925 3805-653-091-025-3862 just remember that there are 50 millions Encrypted algorithms available for you to use, generated from any combination of (*****,**,**) where first algorithms must be between 1000 and 7000 ===>(7000 - 1000) ===> 6000 and second algorithms must be between 10 and 90 ===>(90 - 10) ===> 80 and third algorithms must be between 10 and 90 ===>(90 - 10) ===> 80 this is (6000*80*80) ===> 4,800,000 different combination","title":"Activation Key Utility"},{"location":"DC/Application%20Protector/#tutorial","text":"This tutorial describe all features supported by DC.AppProtector also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Application Protector\\Tutorial\\ This code must be in first form loaded in your project Private Sub TestForm_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load Dim MyProtection As New DynamicComponents.AppProtector() Dim ProductName As String Dim CompanyInfo As String // Customized author message CompanyInfo = \"Company Name: EgyFist Software , inc.\" + vbCrLf // vbCrLf force new line CompanyInfo += \"Home Page: htpp://www.egyfirst.com\" + vbCrLf CompanyInfo += \"License: Free 30 Days Trail Version\" ProductName = \"DC AppProtector v1.0\" // Code of Protection MyProtection. SetInformation (ProductName, CompanyInfo, \"http://www.egyfirst.com/buynow/\") MyProtection. SetAlgorithms (1234, 56, 78) MyProtection. SetLicense ( 30) // may be ignored , since it is by default 30 days MyProtection. ShowAuthor () End Sub","title":"Tutorial"},{"location":"DC/Application%20Protector/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/Application%20Protector/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Application%20Protector/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Application%20Protector/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.AppProtector","title":"How to Register your Copy"},{"location":"DC/Application%20Protector/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC AppProtector Version: 1.0","title":"Author Informaion-----"},{"location":"DC/Binding%20Recordset/","text":"DC Binding Recordset Powered by Overview DC.BindingRecordset is a high-performance COM-based environments such as Visual Basic, Visual C++ , it is only 80 KB DLL , so enjoy speed performance. it has all the magic ,imaginary and incredible features you can find any where in the market. DC.BindingRecordsetis is an enhanced class that handles all aspects required with a data form (including single form and master-details form. It handles all the events required that you rarely need few lines of additional programming code. DC.BindingRecordsetclass is the best decision for software companies which need programming on no time or companies depends on novice programmers . Egy1ST has done a lot of work for you. You define few methods and properties of DC.BindingRecordset class and we do the rest. Features Few Lines to add in your Form_Load event and you will get full control over your form and all included (TextBox - Lables-Buttons-Grid-Recordset) and all related events (Leave-paint-Keypress-AfterColEdit-OnAddNew-Click-MouseEnter-MouseLeave-MouseDown-Enter) You can: Navigate first ,previous , next and last Add new records ,edit it ,save it , or delete it Set relation between master and details files Retrieve related names to your fields code search data for specific formula Trigger sensitive DataHelp to select from by pressing F1 Define required Fields to accept input Populate your form with data automatically after focus change Note: if you develop multi language application or eastern language application , it is recommended to use both of DC.FormTranslator and DC.FormFlipper Example: Dim BR As New DynamicComponents.BindingRecordset() 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) oOrderDetails.Open(\"OrderDetails\", CN, oOrderDetails.CursorType.adOpenKeyset, oOrderDetails.LockType.adLockOptimistic) Me.AxDataGrid1.DataSource = oOrderDetails BR. InitForm (CN, Me, oOrders, AxDataGrid1, oOrderDetails) 'Must Be your first declaration BR. NavigationButtons (\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") BR. ManipulationButtons (\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") BR. KeyFields (\"OrderId\") BR. SetLink (\"OrderId\", \"OrderId\") BR. AddRelatedValue (\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) BR. AddRelatedValue (\"Shippers\", \"ShipperId\", \"ShipVia\", \"CompanyName\", \"xCompanyName\", 2) BR. AddGridRelatedValue (\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) BR. KeyLeaveField (oOrders, \"OrderId\", 5) BR. RequiredFields (\"OrderId+OrderDate+CustomerId\") BR. PopulateForm (Me, oOrders, AxDataGrid1, oOrderDetails) 'Must be your last declaration after this few lines you will get full automated controling on your form without any additional code to write , it is incredible ! Convention There are Two Rules you must know about DC.BindingRecordset Textbox Controls which located in your data form must have the same names as their Fields names in related table and Columns Controls which involved in your datagrid must have the same names as their Fields names in related table for details Textbox Controls which located in your data form and not have related Field in related table must begin with \"x\" or \"X\" character , you can not name related Textbox Control with \"X\" or \"x\" prefix System Requirements DC.BindingRecordsetruns as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.BindingRecordset The DC.DataManger setup program will automatically register the DC_DataManger10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.BindingRecordset To include DC.BindingRecordset in your project From Project menu select add reference Push Browse button to locate your DC_BindingRecordset10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Be sure that Micorsoft DataGrid Control Vresion 6.0 (OLEDB) is included in your Toolbox , if not then right click Toolbox From shortcut menu select customize Toolbox From customize Toolbox Dialog ,scroll down and check Micorsoft DataGrid Control Version 6.0 (OLEDB) Deploying DC.BindingRecordsetApplications The only file needs to be distributed with DC.BindingRecordset COM applications is DC_BindingRecordset10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 Note : If you deploy a translated application with your local language , you must deploy DCBR10_Lang.dll which located in your system directory which is by default [C:\\Windows\\System32](file:///C:/Windows/System32/) and place it in end user system directory How to Create a DSN Open Windows\u2019 ODBC Data Source Administrator as follows: In Windows 95, 98, or NT, choose Start > Settings > Control Panel, then double-click the ODBC Data Sources icon. Depending on your system, the icon could also be called ODBC or 32bit ODBC. in Windows 2000, choose Start > Settings > Control Panel > Administrative Tools > Data Sources. In Windows XP, choose Start > Control Panel > Performance and Maintenance > Administrative Tools > Data Sources (ODBC). Click the System DSN tab. The tab displays the list of DSNs currently on your system. Click Add to add a new DSN to the list. The Create New Data Source dialog box appears, listing all the drivers currently loaded on your system. Select a driver from the list, then click Finish Example: If your database is a Microsoft Access file, select Microsoft Access Driver (*.mdb). If a driver for your product does not appear in the list, you\u2019ll have to download the driver from a vendor\u2019s website and install it. In the dialog box that appears, enter a name for the DSN and specify the connection parameters. The dialog boxes for specifying parameters differ depending on the driver you selected. For the Microsoft Access Driver, you enter a name, click Select, locate the database file on the hard disk, and click OK. Click OK to close the dialog box. The new DSN is added to your list of system DSNs. InitForm Prepare form to know every thing about the form and its controls and all binding data . so it must be the first assignment in your code . an errors may occurs if you do not syntax: Function InitForm (ByRef dm_DSN As ADODB.Connection, ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) dm_DSN is a reference to your DSN connection dm_Form is a reference to your form which passed as 'Me' keyword dm_MasterTable is a reference to your Master Recordset Optional dm_Grid (if your form has a grid) is a reference to your grid Optional dm_DetailTable (if your form has a grid) is a reference to your Details Recordset Example: Dim oMaster As New ADODB.Recordset() Dim oDetails As New ADODB.Recordset() Dim DM As New DataManger() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load CN.Open(\"DSN=NorthWind\") oMaster.Open(\"Orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oDetails.Open(\"OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) DM.InitForm(CN, Me, oMaster, AxDataGrid1, oDetails) End Sub KeyFields it assigns the fields in your Recordset which not allowed to duplicate Syntax: Function KeyFields(ByVal str_KeyFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.KeyFields(\"Flag+OrderId\") KeyLeaveField it assigns the fields in your Recordset which will retieve new data when focus chang away from it Syntax: Function KeyLeaveField(ByRef dm_MasterTable As ADODB.Recordset, ByVal str_KeyLeaveField As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.KeyLeaveField(oMaster, \"OrderId\", 5) SetLink It assigns the fields in your Master Recordset which are linked to related fields in Details Recordset Syntax: Function Sub SetLink(ByVal str_MasterFields As String, ByVal str_DetailFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.SetLink(\"Flag+OrderId\", \"Flag+OrderId\") AddRelatedValue Retrieve the related value to your field code assume you save Cust_Code in your master recordset when you retrieve data you also want to get Cust_Name form Customers table . AddRelatedValue Function do that for you easily Syntax: Function AddRelatedValue(ByRef str_Table As String, ByVal str_Key As String, ByVal str_Control As String, ByVal str_RetValue As String, ByVal str_RetControl As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) AddGridRelatedValue It retrieve the related value to your grid field code assume you save Productt_Code in your Detail recordset when you retrieve data you also want to get Product_Name form Products table . AddRelatedValue Function do that for you easily Syntax: Function AddGridRelatedValue(ByVal str_Table As String, ByVal str_TableKey As String, ByVal str_Column As String, ByVal str_TableRetField As String, ByVal str_GridRetColumn As String, ByVal n_ZeroPad As Byte) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) FlagField Sometimes you use table which involve multi tables within , as \"Personal\" table which can involve \"Customers\", \"Suppliers\" , \"Debits\" , \"Credits\" with different flag key you can assign value \"1\" for Customers , assign value \"2\" for Suppliers and so on the rest of fields is the same. We support Tables with Flag field Syntax: Function FlagField(ByVal str_MasterFlagField As String, ByVal str_DetailFlagField As String, ByVal str_FlagValue As String) Example: DM.FlafField(\"Flag\",\"Flag\",\"2\") How to select some fields Sometimes you want to include some fields of your detail table , not all its fields the next example do that Example: oDetails.Open(\"select flag , billno , custno , custname , price from OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) That is all ! Search Easily to search your recordset , add button in your form and notify Manipulation Buttons Function with its name Begin search by clicking search button , all form controls will be empty , now you get in Search Mode Enter your pattern to search and click search button again , now your form has the search result Navigate through records which apply your search pattern by Navigation Buttons Return to Normal Mode by click search button twice PopulateForm it populates your form and its grid with data it is recomended to be last assignment in your Form_Load event Syntax: Function PopulateForm(ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) Example: DM.PopulateForm(Me, oMaster, AxDataGrid1, oDetails) RequiredFields it assigns the fields in your Recordset which can not be empty Syntax: Function RequiredFields(ByVal str_RequiredFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.RequiredFields(\"OrderId+OrderDate+CustomerId\") Sensitive F1 DataHelp When you AddRelatedValue and your focus is located in the control defined in str_Control (which is control came) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the control defined in str_RetControl parameter When you AddGridRelatedValue and your focus is located in the column defined in str_Column (which is Column name) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the column defined in str_GridRetColumn parameter NavigationButtons Assign Navigation Buttons names so that DC DataManger do all required with it Note: Navigation Buttons are Buttons which enable you navigate through recordset by moving it first , previous . next and last . Syntax: Public Sub NavigationButtons(ByVal dm_First As String, ByVal dm_Previous As String, ByVal dm_Next As String, ByVal dm_Last As String) Example: DM.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") ManipulationButtons Assign Manipulation Buttons names so that DC DataManger do all required with it Note: Manipulation Buttons are Buttons which enable you add , edit , save or delete records in your recordset . Syntax: Function ManipulationButtons(ByVal dm_Save As String, ByVal dm_New As String, ByVal dm_Delete As String, ByVal dm_Close As String, Optional ByVal dm_Search As String = Nothing) Example: DM.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") Configuration Utility We supply you with Configuration Utility which enable you to assign your own language used with DC.DataManger Tutorial This tutorial describe most of features supported by DC.BindingRecordset also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Binding Recordset\\Tutorial\\ Dim BR As New DynamicComponents.BindingRecordset() Dim CN As New ADODB.Connection() Dim oOrders As New ADODB.Recordset() Dim oOrderDetails As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO\\_DBEngine As New DAO.DBEngine() Private Sub TestForm\\_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM\\_Nwind\", \"Microsoft Access Driver (\\*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM\\_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) oOrderDetails.Open(\"OrderDetails\", CN, oOrderDetails.CursorType.adOpenKeyset, oOrderDetails.LockType.adLockOptimistic) Me.AxDataGrid1.DataSource = oOrderDetails BR.InitForm(CN, Me, oOrders, AxDataGrid1, oOrderDetails) 'Must Be your first declaration BR.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") BR.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") BR.KeyFields(\"OrderId\") BR.SetLink(\"OrderId\", \"OrderId\") BR.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) BR.AddRelatedValue(\"Shippers\", \"ShipperId\", \"ShipVia\", \"CompanyName\", \"xCompanyName\", 2) BR.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) BR.KeyLeaveField(oOrders, \"OrderId\", 5) BR.RequiredFields(\"OrderId+OrderDate+CustomerId\") BR.PopulateForm(Me, oOrders, AxDataGrid1, oOrderDetails) 'Must be your last declaration End Sub","title":"DC Binding Recordset"},{"location":"DC/Binding%20Recordset/#dc-binding-recordset","text":"Powered by","title":"DC Binding Recordset"},{"location":"DC/Binding%20Recordset/#overview","text":"DC.BindingRecordset is a high-performance COM-based environments such as Visual Basic, Visual C++ , it is only 80 KB DLL , so enjoy speed performance. it has all the magic ,imaginary and incredible features you can find any where in the market. DC.BindingRecordsetis is an enhanced class that handles all aspects required with a data form (including single form and master-details form. It handles all the events required that you rarely need few lines of additional programming code. DC.BindingRecordsetclass is the best decision for software companies which need programming on no time or companies depends on novice programmers . Egy1ST has done a lot of work for you. You define few methods and properties of DC.BindingRecordset class and we do the rest.","title":"Overview"},{"location":"DC/Binding%20Recordset/#features","text":"Few Lines to add in your Form_Load event and you will get full control over your form and all included (TextBox - Lables-Buttons-Grid-Recordset) and all related events (Leave-paint-Keypress-AfterColEdit-OnAddNew-Click-MouseEnter-MouseLeave-MouseDown-Enter) You can: Navigate first ,previous , next and last Add new records ,edit it ,save it , or delete it Set relation between master and details files Retrieve related names to your fields code search data for specific formula Trigger sensitive DataHelp to select from by pressing F1 Define required Fields to accept input Populate your form with data automatically after focus change Note: if you develop multi language application or eastern language application , it is recommended to use both of DC.FormTranslator and DC.FormFlipper Example: Dim BR As New DynamicComponents.BindingRecordset() 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) oOrderDetails.Open(\"OrderDetails\", CN, oOrderDetails.CursorType.adOpenKeyset, oOrderDetails.LockType.adLockOptimistic) Me.AxDataGrid1.DataSource = oOrderDetails BR. InitForm (CN, Me, oOrders, AxDataGrid1, oOrderDetails) 'Must Be your first declaration BR. NavigationButtons (\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") BR. ManipulationButtons (\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") BR. KeyFields (\"OrderId\") BR. SetLink (\"OrderId\", \"OrderId\") BR. AddRelatedValue (\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) BR. AddRelatedValue (\"Shippers\", \"ShipperId\", \"ShipVia\", \"CompanyName\", \"xCompanyName\", 2) BR. AddGridRelatedValue (\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) BR. KeyLeaveField (oOrders, \"OrderId\", 5) BR. RequiredFields (\"OrderId+OrderDate+CustomerId\") BR. PopulateForm (Me, oOrders, AxDataGrid1, oOrderDetails) 'Must be your last declaration after this few lines you will get full automated controling on your form without any additional code to write , it is incredible !","title":"Features"},{"location":"DC/Binding%20Recordset/#convention","text":"There are Two Rules you must know about DC.BindingRecordset Textbox Controls which located in your data form must have the same names as their Fields names in related table and Columns Controls which involved in your datagrid must have the same names as their Fields names in related table for details Textbox Controls which located in your data form and not have related Field in related table must begin with \"x\" or \"X\" character , you can not name related Textbox Control with \"X\" or \"x\" prefix","title":"Convention"},{"location":"DC/Binding%20Recordset/#system-requirements","text":"DC.BindingRecordsetruns as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.BindingRecordset The DC.DataManger setup program will automatically register the DC_DataManger10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"System Requirements"},{"location":"DC/Binding%20Recordset/#including-dcbindingrecordset","text":"To include DC.BindingRecordset in your project From Project menu select add reference Push Browse button to locate your DC_BindingRecordset10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Be sure that Micorsoft DataGrid Control Vresion 6.0 (OLEDB) is included in your Toolbox , if not then right click Toolbox From shortcut menu select customize Toolbox From customize Toolbox Dialog ,scroll down and check Micorsoft DataGrid Control Version 6.0 (OLEDB)","title":"Including DC.BindingRecordset"},{"location":"DC/Binding%20Recordset/#deploying-dcbindingrecordsetapplications","text":"The only file needs to be distributed with DC.BindingRecordset COM applications is DC_BindingRecordset10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 Note : If you deploy a translated application with your local language , you must deploy DCBR10_Lang.dll which located in your system directory which is by default [C:\\Windows\\System32](file:///C:/Windows/System32/) and place it in end user system directory","title":"Deploying DC.BindingRecordsetApplications"},{"location":"DC/Binding%20Recordset/#how-to-create-a-dsn","text":"Open Windows\u2019 ODBC Data Source Administrator as follows: In Windows 95, 98, or NT, choose Start > Settings > Control Panel, then double-click the ODBC Data Sources icon. Depending on your system, the icon could also be called ODBC or 32bit ODBC. in Windows 2000, choose Start > Settings > Control Panel > Administrative Tools > Data Sources. In Windows XP, choose Start > Control Panel > Performance and Maintenance > Administrative Tools > Data Sources (ODBC). Click the System DSN tab. The tab displays the list of DSNs currently on your system. Click Add to add a new DSN to the list. The Create New Data Source dialog box appears, listing all the drivers currently loaded on your system. Select a driver from the list, then click Finish Example: If your database is a Microsoft Access file, select Microsoft Access Driver (*.mdb). If a driver for your product does not appear in the list, you\u2019ll have to download the driver from a vendor\u2019s website and install it. In the dialog box that appears, enter a name for the DSN and specify the connection parameters. The dialog boxes for specifying parameters differ depending on the driver you selected. For the Microsoft Access Driver, you enter a name, click Select, locate the database file on the hard disk, and click OK. Click OK to close the dialog box. The new DSN is added to your list of system DSNs.","title":"How to Create a DSN"},{"location":"DC/Binding%20Recordset/#initform","text":"Prepare form to know every thing about the form and its controls and all binding data . so it must be the first assignment in your code . an errors may occurs if you do not syntax: Function InitForm (ByRef dm_DSN As ADODB.Connection, ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) dm_DSN is a reference to your DSN connection dm_Form is a reference to your form which passed as 'Me' keyword dm_MasterTable is a reference to your Master Recordset Optional dm_Grid (if your form has a grid) is a reference to your grid Optional dm_DetailTable (if your form has a grid) is a reference to your Details Recordset Example: Dim oMaster As New ADODB.Recordset() Dim oDetails As New ADODB.Recordset() Dim DM As New DataManger() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load CN.Open(\"DSN=NorthWind\") oMaster.Open(\"Orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oDetails.Open(\"OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) DM.InitForm(CN, Me, oMaster, AxDataGrid1, oDetails) End Sub","title":"InitForm"},{"location":"DC/Binding%20Recordset/#keyfields","text":"it assigns the fields in your Recordset which not allowed to duplicate Syntax: Function KeyFields(ByVal str_KeyFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.KeyFields(\"Flag+OrderId\")","title":"KeyFields"},{"location":"DC/Binding%20Recordset/#keyleavefield","text":"it assigns the fields in your Recordset which will retieve new data when focus chang away from it Syntax: Function KeyLeaveField(ByRef dm_MasterTable As ADODB.Recordset, ByVal str_KeyLeaveField As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.KeyLeaveField(oMaster, \"OrderId\", 5)","title":"KeyLeaveField"},{"location":"DC/Binding%20Recordset/#setlink","text":"It assigns the fields in your Master Recordset which are linked to related fields in Details Recordset Syntax: Function Sub SetLink(ByVal str_MasterFields As String, ByVal str_DetailFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.SetLink(\"Flag+OrderId\", \"Flag+OrderId\")","title":"SetLink"},{"location":"DC/Binding%20Recordset/#addrelatedvalue","text":"Retrieve the related value to your field code assume you save Cust_Code in your master recordset when you retrieve data you also want to get Cust_Name form Customers table . AddRelatedValue Function do that for you easily Syntax: Function AddRelatedValue(ByRef str_Table As String, ByVal str_Key As String, ByVal str_Control As String, ByVal str_RetValue As String, ByVal str_RetControl As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3)","title":"AddRelatedValue"},{"location":"DC/Binding%20Recordset/#addgridrelatedvalue","text":"It retrieve the related value to your grid field code assume you save Productt_Code in your Detail recordset when you retrieve data you also want to get Product_Name form Products table . AddRelatedValue Function do that for you easily Syntax: Function AddGridRelatedValue(ByVal str_Table As String, ByVal str_TableKey As String, ByVal str_Column As String, ByVal str_TableRetField As String, ByVal str_GridRetColumn As String, ByVal n_ZeroPad As Byte) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2)","title":"AddGridRelatedValue"},{"location":"DC/Binding%20Recordset/#flagfield","text":"Sometimes you use table which involve multi tables within , as \"Personal\" table which can involve \"Customers\", \"Suppliers\" , \"Debits\" , \"Credits\" with different flag key you can assign value \"1\" for Customers , assign value \"2\" for Suppliers and so on the rest of fields is the same. We support Tables with Flag field Syntax: Function FlagField(ByVal str_MasterFlagField As String, ByVal str_DetailFlagField As String, ByVal str_FlagValue As String) Example: DM.FlafField(\"Flag\",\"Flag\",\"2\")","title":"FlagField"},{"location":"DC/Binding%20Recordset/#how-to-select-some-fields","text":"Sometimes you want to include some fields of your detail table , not all its fields the next example do that Example: oDetails.Open(\"select flag , billno , custno , custname , price from OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) That is all !","title":"How to select some fields"},{"location":"DC/Binding%20Recordset/#search","text":"Easily to search your recordset , add button in your form and notify Manipulation Buttons Function with its name Begin search by clicking search button , all form controls will be empty , now you get in Search Mode Enter your pattern to search and click search button again , now your form has the search result Navigate through records which apply your search pattern by Navigation Buttons Return to Normal Mode by click search button twice","title":"Search"},{"location":"DC/Binding%20Recordset/#populateform","text":"it populates your form and its grid with data it is recomended to be last assignment in your Form_Load event Syntax: Function PopulateForm(ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) Example: DM.PopulateForm(Me, oMaster, AxDataGrid1, oDetails)","title":"PopulateForm"},{"location":"DC/Binding%20Recordset/#requiredfields","text":"it assigns the fields in your Recordset which can not be empty Syntax: Function RequiredFields(ByVal str_RequiredFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.RequiredFields(\"OrderId+OrderDate+CustomerId\")","title":"RequiredFields"},{"location":"DC/Binding%20Recordset/#sensitive-f1-datahelp","text":"When you AddRelatedValue and your focus is located in the control defined in str_Control (which is control came) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the control defined in str_RetControl parameter When you AddGridRelatedValue and your focus is located in the column defined in str_Column (which is Column name) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the column defined in str_GridRetColumn parameter","title":"Sensitive F1 DataHelp"},{"location":"DC/Binding%20Recordset/#navigationbuttons","text":"Assign Navigation Buttons names so that DC DataManger do all required with it Note: Navigation Buttons are Buttons which enable you navigate through recordset by moving it first , previous . next and last . Syntax: Public Sub NavigationButtons(ByVal dm_First As String, ByVal dm_Previous As String, ByVal dm_Next As String, ByVal dm_Last As String) Example: DM.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\")","title":"NavigationButtons"},{"location":"DC/Binding%20Recordset/#manipulationbuttons","text":"Assign Manipulation Buttons names so that DC DataManger do all required with it Note: Manipulation Buttons are Buttons which enable you add , edit , save or delete records in your recordset . Syntax: Function ManipulationButtons(ByVal dm_Save As String, ByVal dm_New As String, ByVal dm_Delete As String, ByVal dm_Close As String, Optional ByVal dm_Search As String = Nothing) Example: DM.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\")","title":"ManipulationButtons"},{"location":"DC/Binding%20Recordset/#configuration-utility","text":"We supply you with Configuration Utility which enable you to assign your own language used with DC.DataManger","title":"Configuration Utility"},{"location":"DC/Binding%20Recordset/#tutorial","text":"This tutorial describe most of features supported by DC.BindingRecordset also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Binding Recordset\\Tutorial\\ Dim BR As New DynamicComponents.BindingRecordset() Dim CN As New ADODB.Connection() Dim oOrders As New ADODB.Recordset() Dim oOrderDetails As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO\\_DBEngine As New DAO.DBEngine() Private Sub TestForm\\_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM\\_Nwind\", \"Microsoft Access Driver (\\*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM\\_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) oOrderDetails.Open(\"OrderDetails\", CN, oOrderDetails.CursorType.adOpenKeyset, oOrderDetails.LockType.adLockOptimistic) Me.AxDataGrid1.DataSource = oOrderDetails BR.InitForm(CN, Me, oOrders, AxDataGrid1, oOrderDetails) 'Must Be your first declaration BR.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") BR.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") BR.KeyFields(\"OrderId\") BR.SetLink(\"OrderId\", \"OrderId\") BR.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) BR.AddRelatedValue(\"Shippers\", \"ShipperId\", \"ShipVia\", \"CompanyName\", \"xCompanyName\", 2) BR.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) BR.KeyLeaveField(oOrders, \"OrderId\", 5) BR.RequiredFields(\"OrderId+OrderDate+CustomerId\") BR.PopulateForm(Me, oOrders, AxDataGrid1, oOrderDetails) 'Must be your last declaration End Sub","title":"Tutorial"},{"location":"DC/Data%20Entry%20Validator/","text":"DynamicComponents - DataEntry Validator----- Powered by Overview DC.DataEntryValidator is a COM based component that allows you to Validate your data entry and restrict it to predefined type(Numeric-Alphabetic-AlphaNumeric-Date-Decimal) or to your defined DC.DataEntryValidator may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. DC.DataEntryValidator will Notify you with red forecolor when your entry is not proper , so there is some thing wrong with data entry in that Textbox DC.DataEntryValidator will Format data by define decimal places for numeric entry , or define letter case for charactes entry EgyFirst has done a lot of work for you. You define few lines of code and we validate and format data entry for you Features ----- Few Lines to add in your Form_Load event and you will get full control over your data entry by Validate it and format it You can: Validate your data entry by restrict it to predefined type(Numeric-Alphabetic-AlphaNumeric-Date-Decimal) or to your defined characters Notify you with red forecolor if your entry is not proper Format numbers by define decimal places for numeric entry Format string by define letter case for charactes entry (Lower Case , Upper Case , Only First Character is Capital ) Note: alphabetic characters may be any character with in (abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) numeric characters may be any character with in (0123456789) AlphaNumericFields must be numeric or alphabetic characters (0123456789abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) DateFields must be accepted date like (13/12/1971) if your data is wrong we will notify you with red forecolor Example: DV.InitForm(Me) DV. NumericFields (\"CustomerId\") DV. AlphabeticFields (\"CustomerName\") DV. FirstCharOfWordsFields (\"CustomerName\") DV. AlphaNumericFields (\"Address\") DV. FirstCharOnlyFields (\"Address\") DV. NumericFields (\"phone\") DV. DecimalFields (\"MaxDebit\") DV. DecimalPlaces (2) DV. DateFields (\"LastDeal\") System Requirements ----- DC.DataEntryValidator runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.DataEntryValidator----- The DC.DataEntryValidator setup program will automatically register the DC_DataEntryValidator10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.DataEntryValidator To include DC.DataEntryValidator in your project From Project menu select add reference Push Browse button to locate your DC_DataEntryValidator10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.DataEntryValidator Applications ----- The only file needs to be distributed with DC.DataEntryValidator COM applications is DC_DataEntryValidator10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 InitForm ----- Prepare form to know every thing about the form and its controls . so it must be the first assignment in your code . an errors may occurs if you do not syntax: Function InitForm(ByRef dm_Form As System.Windows.Forms.Form) dm_Form is a reference to your form which passed as 'Me' keyword Example: Dim DV As New DynamicComponents.DataEntryValidator() DV.InitForm( Me) NumericFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" Syntax: Function NumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.NumericFields(\"CustomerID\", \"OrderId\", \"ShipVia\") AlphabeticFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" additional to upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Syntax: Function AlphabeticFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"FirstName\", \"FamilyName\") AlphaNumericFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" and upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" additional to numeric characters \"0123456789\" Syntax: Function AlphaNumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"Address\") DateFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to \"/-\\\" characters when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"30/2/2004\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DateFields(ByVal ParamArray str_DateFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.DateFields(\"OrderDate\") DecimalFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to decimal point '.' data entry will be formated by n decimal places defined in DecimalPlaces Function when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"705.3.2\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DecimalFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.DecimalFields(\"Freight\") SpecialChars ----- It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in its parameter Syntax: Function SpecialChars(ByVal str_Chars As String) Example: DV.SpecialChars (\"YyNn\") SpecialCharsFields ----- It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in SpecialChars function Syntax: Function SpecialCharsFields(ByVal ParamArray str_SpecialFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.SpecialCharsFields (\"Married\") LowerCaseFields ----- It converts all characters to lower case Syntax: Function LowerCaseFields(ByVal ParamArray str_LowerCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.LowerCaseFields (\"SupplierName\") UpperCaseFields ----- It converts all characters to upper case Syntax: Function UpperCaseFields(ByVal ParamArray str_UpperCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.UpperCaseFields (\"ProductName\") DecimalPlaces ----- it formats number by making it in decimal state with n places which you define in your function Syntax: Function DecimalPlaces(ByVal n_DecimalPlaces As Byte) Example: DV.DecimalPlaces(2) FirstCharOnlyFields ----- It converts only First character to upper case Syntax: Function FirstCharOnlyFields(ByVal ParamArray str_FirstCharOnlyFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.FirstCharOnlyFields (\"CustomerName\") Tutorial This tutorial describe most of features supported by DC.DataEntryValidator also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\DataEntryValidator\\Tutorial\\ Dim DV As New DynamicComponents.DataEntryValidator() Dim CN As New ADODB.Connection() Dim oCust As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oCust.Open(\"Customers\", CN, oCust.CursorType.adOpenKeyset, oCust.LockType.adLockOptimistic) PopulateDate() DV.InitForm(Me) //must be your first assignment , an error occurs if not DV.NumericFields(\"CustomerId\") //CustomerId must be numeric characters(0123456789) DV.AlphabeticFields(\"CustomerName\") //CustomerName must be alphabetic characters (abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) DV.FirstCharOfWordsFields(\"CustomerName\") //'First charecter of every word will be in uooer case DV.AlphaNumericFields(\"Address\") //'Address must be numeric or alphabetic characters (0123456789abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) DV.FirstCharOnlyFields(\"Address\") //'First charecter of first word only will be in uooer case DV.NumericFields(\"phone\") //'Phone must be numeric characters(0123456789) DV.DecimalFields(\"MaxDebit\") //'MaxDebit must be decimal characters(0123456789 & .) DV.DecimalPlaces(2) //'MaxDebit will be formatted with 2 decimal digits DV.DateFields(\"LastDeal\") //'LastDeal must be accepted date(0123456789-\\/) End Sub Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DataManger Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC DataEntry Validator Version: 1.0","title":"**DynamicComponents - DataEntry Validator-----**"},{"location":"DC/Data%20Entry%20Validator/#dynamiccomponents-dataentry-validator-","text":"Powered by","title":"DynamicComponents - DataEntry Validator-----"},{"location":"DC/Data%20Entry%20Validator/#overview","text":"DC.DataEntryValidator is a COM based component that allows you to Validate your data entry and restrict it to predefined type(Numeric-Alphabetic-AlphaNumeric-Date-Decimal) or to your defined DC.DataEntryValidator may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. DC.DataEntryValidator will Notify you with red forecolor when your entry is not proper , so there is some thing wrong with data entry in that Textbox DC.DataEntryValidator will Format data by define decimal places for numeric entry , or define letter case for charactes entry EgyFirst has done a lot of work for you. You define few lines of code and we validate and format data entry for you","title":"Overview"},{"location":"DC/Data%20Entry%20Validator/#features-","text":"Few Lines to add in your Form_Load event and you will get full control over your data entry by Validate it and format it You can: Validate your data entry by restrict it to predefined type(Numeric-Alphabetic-AlphaNumeric-Date-Decimal) or to your defined characters Notify you with red forecolor if your entry is not proper Format numbers by define decimal places for numeric entry Format string by define letter case for charactes entry (Lower Case , Upper Case , Only First Character is Capital ) Note: alphabetic characters may be any character with in (abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) numeric characters may be any character with in (0123456789) AlphaNumericFields must be numeric or alphabetic characters (0123456789abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) DateFields must be accepted date like (13/12/1971) if your data is wrong we will notify you with red forecolor Example: DV.InitForm(Me) DV. NumericFields (\"CustomerId\") DV. AlphabeticFields (\"CustomerName\") DV. FirstCharOfWordsFields (\"CustomerName\") DV. AlphaNumericFields (\"Address\") DV. FirstCharOnlyFields (\"Address\") DV. NumericFields (\"phone\") DV. DecimalFields (\"MaxDebit\") DV. DecimalPlaces (2) DV. DateFields (\"LastDeal\")","title":"Features -----"},{"location":"DC/Data%20Entry%20Validator/#system-requirements-","text":"DC.DataEntryValidator runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP.","title":"System Requirements -----"},{"location":"DC/Data%20Entry%20Validator/#installing-dcdataentryvalidator-","text":"The DC.DataEntryValidator setup program will automatically register the DC_DataEntryValidator10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.DataEntryValidator-----"},{"location":"DC/Data%20Entry%20Validator/#including-dcdataentryvalidator","text":"To include DC.DataEntryValidator in your project From Project menu select add reference Push Browse button to locate your DC_DataEntryValidator10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.DataEntryValidator"},{"location":"DC/Data%20Entry%20Validator/#deploying-dcdataentryvalidator-applications-","text":"The only file needs to be distributed with DC.DataEntryValidator COM applications is DC_DataEntryValidator10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.DataEntryValidator Applications -----"},{"location":"DC/Data%20Entry%20Validator/#initform","text":"","title":"InitForm"},{"location":"DC/Data%20Entry%20Validator/#-","text":"Prepare form to know every thing about the form and its controls . so it must be the first assignment in your code . an errors may occurs if you do not","title":"-----"},{"location":"DC/Data%20Entry%20Validator/#syntax","text":"Function InitForm(ByRef dm_Form As System.Windows.Forms.Form) dm_Form is a reference to your form which passed as 'Me' keyword Example: Dim DV As New DynamicComponents.DataEntryValidator() DV.InitForm( Me)","title":"syntax:"},{"location":"DC/Data%20Entry%20Validator/#numericfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" Syntax: Function NumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.NumericFields(\"CustomerID\", \"OrderId\", \"ShipVia\")","title":"NumericFields -----"},{"location":"DC/Data%20Entry%20Validator/#alphabeticfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" additional to upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Syntax: Function AlphabeticFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"FirstName\", \"FamilyName\")","title":"AlphabeticFields -----"},{"location":"DC/Data%20Entry%20Validator/#alphanumericfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" and upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" additional to numeric characters \"0123456789\" Syntax: Function AlphaNumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"Address\")","title":"AlphaNumericFields -----"},{"location":"DC/Data%20Entry%20Validator/#datefields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to \"/-\\\" characters when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"30/2/2004\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DateFields(ByVal ParamArray str_DateFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.DateFields(\"OrderDate\")","title":"DateFields -----"},{"location":"DC/Data%20Entry%20Validator/#decimalfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to decimal point '.' data entry will be formated by n decimal places defined in DecimalPlaces Function when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"705.3.2\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DecimalFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.DecimalFields(\"Freight\")","title":"DecimalFields -----"},{"location":"DC/Data%20Entry%20Validator/#specialchars-","text":"It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in its parameter Syntax: Function SpecialChars(ByVal str_Chars As String) Example: DV.SpecialChars (\"YyNn\")","title":"SpecialChars -----"},{"location":"DC/Data%20Entry%20Validator/#specialcharsfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in SpecialChars function Syntax: Function SpecialCharsFields(ByVal ParamArray str_SpecialFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.SpecialCharsFields (\"Married\")","title":"SpecialCharsFields -----"},{"location":"DC/Data%20Entry%20Validator/#lowercasefields-","text":"It converts all characters to lower case Syntax: Function LowerCaseFields(ByVal ParamArray str_LowerCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.LowerCaseFields (\"SupplierName\")","title":"LowerCaseFields -----"},{"location":"DC/Data%20Entry%20Validator/#uppercasefields-","text":"It converts all characters to upper case Syntax: Function UpperCaseFields(ByVal ParamArray str_UpperCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.UpperCaseFields (\"ProductName\")","title":"UpperCaseFields -----"},{"location":"DC/Data%20Entry%20Validator/#decimalplaces-","text":"it formats number by making it in decimal state with n places which you define in your function Syntax: Function DecimalPlaces(ByVal n_DecimalPlaces As Byte) Example: DV.DecimalPlaces(2)","title":"DecimalPlaces -----"},{"location":"DC/Data%20Entry%20Validator/#firstcharonlyfields-","text":"It converts only First character to upper case Syntax: Function FirstCharOnlyFields(ByVal ParamArray str_FirstCharOnlyFields() As String) Note: multi fields can concatenated by comma \",\" Example: DV.FirstCharOnlyFields (\"CustomerName\")","title":"FirstCharOnlyFields -----"},{"location":"DC/Data%20Entry%20Validator/#tutorial","text":"This tutorial describe most of features supported by DC.DataEntryValidator also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\DataEntryValidator\\Tutorial\\ Dim DV As New DynamicComponents.DataEntryValidator() Dim CN As New ADODB.Connection() Dim oCust As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oCust.Open(\"Customers\", CN, oCust.CursorType.adOpenKeyset, oCust.LockType.adLockOptimistic) PopulateDate() DV.InitForm(Me) //must be your first assignment , an error occurs if not DV.NumericFields(\"CustomerId\") //CustomerId must be numeric characters(0123456789) DV.AlphabeticFields(\"CustomerName\") //CustomerName must be alphabetic characters (abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) DV.FirstCharOfWordsFields(\"CustomerName\") //'First charecter of every word will be in uooer case DV.AlphaNumericFields(\"Address\") //'Address must be numeric or alphabetic characters (0123456789abcdefghijklmnopqrstuvwzyzABCDEFGHIJKLMNOPQRSTUVWXYZ) DV.FirstCharOnlyFields(\"Address\") //'First charecter of first word only will be in uooer case DV.NumericFields(\"phone\") //'Phone must be numeric characters(0123456789) DV.DecimalFields(\"MaxDebit\") //'MaxDebit must be decimal characters(0123456789 & .) DV.DecimalPlaces(2) //'MaxDebit will be formatted with 2 decimal digits DV.DateFields(\"LastDeal\") //'LastDeal must be accepted date(0123456789-\\/) End Sub","title":"Tutorial"},{"location":"DC/Data%20Entry%20Validator/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/Data%20Entry%20Validator/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Data%20Entry%20Validator/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Data%20Entry%20Validator/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DataManger","title":"How to Register your Copy"},{"location":"DC/Data%20Entry%20Validator/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC DataEntry Validator Version: 1.0","title":"Author Informaion-----"},{"location":"DC/Data%20Manger/","text":"DynamicComponents DataManger ----- Overview DC.DataManger is a high-performance COM-based environments such as Visual Basic, Visual C++ , it is only 80 KB DLL , so enjoy speed performance. DC.DataManger class has all the magic ,imaginary and incredible features you can find any where in the market. DC.DataManger is an enhanced class that handles all aspects required with a data form (including single form and master-details form). DC.DataManger class handles all the events required that you rarely need few lines of additional programming code. DC.DataManger class is the best decision for software companies which needs programming on no time or companies depends on novice programmers . EgyFirst has done a lot of work for you. You define few methods and properties of DC.DataManger class and we do the rest. Features ----- Few Lines to add in your Form_Load event and you will get full control over your form and all included (TextBox - Lables-Buttons-Grid-Recordset) and all related events (Leave-paint-Keypress-AfterColEdit-OnAddNew-Click-MouseEnter-MouseLeave-MouseDown-Enter) You can: Navigate first ,previous , next and last Add new records ,edit it ,save it , or delete it Retrieve related names to your fields code Trigger sensitive DataHelp to select from by pressing F1 Trigger sensitive Help by pressing F12 Validate your entry by restrict it to predefined type(Numeric-Alphabetic-AlphaNumeric-Date-Decimal) or to your defined characters Notify you with red forecolor if your entry is not proper Format data by define decimal places for numeric entry , or define letter case for charactes entry Change button image according to mouse movement or focus change Support MultiLanguage Application , by populate form labels with predefined translation automatically Support Eastern Language , we support right to left application by changing alignment to right and orientation by flip form horizontally 180 Enable you navigate through controls with Return key as with tab key Example: dm. InitForm (CN, Me, oMaster, AxDataGrid1, oDetails) dm. PrepareImageButtons (aImage, \"C:\\DataManage\\Icons\\\", False) dm. NavigationButtons (\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") dm. ManageButtons (\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") dm. KeyFields (\"OrderId\") dm. SetLink (\"OrderId\", \"OrderId\") dm. AddRelatedValue (\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) dm. AddGridRelatedValue (\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) dm. KeyLeaveField (oMaster, \"OrderId\", 5) dm. RequiredFields (\"OrderId+OrderDate+CustomerId\") dm. NumericFields (\"CustomerID\", \"OrderId\", \"ShipVia\") dm. DateFields (\"OrderDate\") dm. PopulateForm (Me, oMaster, AxDataGrid1, oDetails) after this few lines you will get full automated controling on your form without any additional code to write , it is incredible ! Convention There are Two Rules you must know about DC.DataManger Textbox Controls which located in your data form must have the same names as their Fields names in related table and Columns Controls which involved in your datagrid must have the same names as their Fields names in related table for details Textbox Controls which located in your data form and not have related Field in related table must begin with \"x\" or \"X\" character , you can not name related Textbox Control with \"X\" or \"x\" prefix System Requirements ----- DC.DataManger runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.DataManger----- The DC.DataManger setup program will automatically register the DC_DataManger10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.DataManger To include DC.DataManger in your project From Project menu select add reference Push Browse button to locate your DC_DataManger10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Be sure that Micorsoft DataGrid Control Vresion 6.0 (OLEDB) is included in your Toolbox , if not then right click Toolbox From shortcut menu select customize Toolbox From customize Toolbox Dialog ,scroll down and check Micorsoft DataGrid Control Version 6.0 (OLEDB) Deploying DC.DataManger Applications ----- The only file needs to be distributed with DC.DatManger COM applications is DC_DataManger10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 Note : If you deploy a translated application with your local language , you must deploy DCDM10_Lang.dll which located in your system directory which is by default [C:\\Windows\\System32](file:///C:/Windows/System32/) and place it in end user system directory How to Create a DSN 1- Open Windows\u2019 ODBC Data Source Administrator as follows: In Windows 95, 98, or NT, choose Start > Settings > Control Panel, then double-click the ODBC Data Sources icon. Depending on your system, the icon could also be called ODBC or 32bit ODBC. in Windows 2000, choose Start > Settings > Control Panel > Administrative Tools > Data Sources. In Windows XP, choose Start > Control Panel > Performance and Maintenance > Administrative Tools > Data Sources (ODBC). 2 - Click the System DSN tab. The tab displays the list of DSNs currently on your system. 3- Click Add to add a new DSN to the list. The Create New Data Source dialog box appears, listing all the drivers currently loaded on your system. 4- Select a driver from the list, then click Finish Example: If your database is a Microsoft Access file, select Microsoft Access Driver (*.mdb). If a driver for your product does not appear in the list, you\u2019ll have to download the driver from a vendor\u2019s website and install it. In the dialog box that appears, enter a name for the DSN and specify the connection parameters. The dialog boxes for specifying parameters differ depending on the driver you selected. For the Microsoft Access Driver, you enter a name, click Select, locate the database file on the hard disk, and click OK. Click OK to close the dialog box. The new DSN is added to your list of system DSNs. InitForm ----- Prepare form to know every thing about the form and its controls and all binding data . so it must be the first assignment in your code . an errors may occurs if you do not syntax: Function InitForm(ByRef dm_DSN As ADODB.Connection, ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) dm_DSN is a reference to your DSN connection dm_Form is a reference to your form which passed as 'Me' keyword dm_MasterTable is a reference to your Master Recordset Optional dm_Grid (if your form has a grid) is a reference to your grid Optional dm_DetailTable (if your form has a grid) is a reference to your Details Recordset Example: Dim oMaster As New ADODB.Recordset() Dim oDetails As New ADODB.Recordset() Dim DM As New DataManger() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load CN.Open(\"DSN=NorthWind\") oMaster.Open(\"Orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oDetails.Open(\"OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) DM.InitForm(CN, Me, oMaster, AxDataGrid1, oDetails) End Sub KeyFields ----- it assigns the fields in your Recordset which not allowed to duplicate Syntax: Function KeyFields(ByVal str_KeyFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.KeyFields(\"Flag+OrderId\") KeyLeaveField ----- it assigns the fields in your Recordset which will retieve new data when focus chang away from it Syntax: Function KeyLeaveField(ByRef dm_MasterTable As ADODB.Recordset, ByVal str_KeyLeaveField As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.KeyLeaveField(oMaster, \"OrderId\", 5) SetLink ----- It assigns the fields in your Master Recordset which are linked to related fields in Details Recordset Syntax: Function Sub SetLink(ByVal str_MasterFields As String, ByVal str_DetailFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.SetLink(\"Flag+OrderId\", \"Flag+OrderId\") e AddRelatedValue ----- Retrieve the related value to your field code assume you save Cust_Code in your master recordset when you retrieve data you also want to get Cust_Name form Customers table . AddRelatedValue Function do that for you easily Syntax: Function AddRelatedValue(ByRef str_Table As String, ByVal str_Key As String, ByVal str_Control As String, ByVal str_RetValue As String, ByVal str_RetControl As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) AddGridRelatedValue ----- It retrieve the related value to your grid field code assume you save Productt_Code in your Detail recordset when you retrieve data you also want to get Product_Name form Products table . AddRelatedValue Function do that for you easily Syntax: Function AddGridRelatedValue(ByVal str_Table As String, ByVal str_TableKey As String, ByVal str_Column As String, ByVal str_TableRetField As String, ByVal str_GridRetColumn As String, ByVal n_ZeroPad As Byte) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) FlagField Sometimes you use table which involve multi tables within , as \"Personal\" table which can involve \"Customers\", \"Suppliers\" , \"Debits\" , \"Credits\" with different flag key you can assign value \"1\" for Customers , assign value \"2\" for Suppliers and so on the rest of fields is the same. We support Tables with Flag field Syntax: Function FlagField(ByVal str_MasterFlagField As String, ByVal str_DetailFlagField As String, ByVal str_FlagValue As String) Example: DM.FlafField(\"Flag\",\"Flag\",\"2\") How to select some fields Sometimes you want to include some fields of your detail table , not all its fields the next example do that Example: oDetails.Open(\"select flag , billno , custno , custname , price from OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) That is all ! Search Easily to search your recordset , add button in your form and notify Manipulation Buttons Function with its name Begin search by clicking search button , all form controls will be empty , now you get in Search Mode Enter your pattern to search and click search button again , now your form has the search result Navigate through records which apply your search pattern by Navigation Buttons Return to Normal Mode by click search button twice PopulateForm ----- it populate your form and its grid with data it recomnded to be last assignment in your Form_Load event Syntax: Function PopulateForm(ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) Example: DM.PopulateForm(Me, oMaster, AxDataGrid1, oDetails) NumericFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" Syntax: Function NumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"CustomerID\", \"OrderId\", \"ShipVia\") AlphabeticFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" additional to upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Syntax: Function AlphabeticFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"FirstName\", \"FamilyName\") AlphaNumericFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" and upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" additional to numeric characters \"0123456789\" Syntax: Function AlphaNumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"Address\") DateFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to \"/-\\\" characters when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"30/2/2004\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DateFields(ByVal ParamArray str_DateFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.DateFields(\"OrderDate\") DecimalFields ----- It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to decimal point '.' data entry will be formated by n decimal places defined in DecimalPlaces Function when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"705.3.2\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DecimalFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.DecimalFields(\"Freight\") SpecialChars ----- It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in its parameter Syntax: Function SpecialChars(ByVal str_Chars As String) Example: DM.SpecialChars (\"YyNn\") SpecialCharsFields ----- It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in SpecialChars function Syntax: Function SpecialCharsFields(ByVal ParamArray str_SpecialFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.SpecialCharsFields (\"Married\") RequiredFields ----- it assigns the fields in your Recordset which can not be empty Syntax: Function RequiredFields(ByVal str_RequiredFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.RequiredFields(\"OrderId+OrderDate+CustomerId\") LowerCaseFields ----- It converts all characters to lower case Syntax: Function LowerCaseFields(ByVal ParamArray str_LowerCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.LowerCaseFields (\"SupplierName\") UpperCaseFields ----- It converts all characters to upper case Syntax: Function UpperCaseFields(ByVal ParamArray str_UpperCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.UpperCaseFields (\"ProductName\") DecimalPlaces ----- it formats number by making it in decimal state with n places which you define in your function Syntax: Function DecimalPlaces(ByVal n_DecimalPlaces As Byte) Example: DM.DecimalPlaces(2) FirstCharOnlyFields ----- It converts only First character to upper case Syntax: Function FirstCharOnlyFields(ByVal ParamArray str_FirstCharOnlyFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.FirstCharOnlyFields (\"CustomerName\") FirstCharOfWordsFields ----- It converts First character of every words to upper case Syntax: Function FirstCharOfWordsFields(ByVal ParamArray str_FirstCharOfWordsFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.FirstCharOfWordsFields(\"CustomerName\") PrepareImageButtons ----- Your Data Form have Navigation & Manipulation Buttons you can assign changeable icons for each button , additionally ,you can assign a motion for each button if you put third parameter to true ,all you need is Buttons without Motion Buttons with Motion Declare an array with 27 element Assign 3 icons for each button First icon for MouseLeave state second icon for MoveOver state third icon for MoveDown state 3. Populate your array respectivly with icons as this sequence FirstButton_MouseLeave , FirstButton_MouseOver, FirstButton_MouseDown PreviousButton_MouseLeave , PreviousButton_MouseOver, PreviousButton_MouseDown NextButton_MouseLeave , NextButton_MouseOver, NextButton_MouseDown LastButton_MouseLeave , LastButton_MouseOver, LastButton_MouseDown SavedataButton_MouseLeave , SavedataButton_MouseOver, SavedataButton_MouseDown NewdataButton_MouseLeave , NewdataButton_MouseOver, NewdataButton_MouseDown DeleteDataButton_MouseLeave , DeleteDataButton_MouseOver, DeleteDataButton_MouseDown CloseFormButton_MouseLeave , CloseFormButton_MouseOver, CloseFormButton_MouseDown and optionally you can add SearchButton_MouseLeave , SearchButton_MouseOver, SearchButton_MouseDown Syntax: Function PrepareImageButtons(ByVal ImagesArray() As String, ByVal ImageFullPath As String, ByVal Motion As Boolean) Example: DM.PrepareImageButtons(aImage, \"C:\\MyApp\\Icons\\\", True) where aImage is your array hold icons third parameter idicate that you wih to show motion with each button NavigationButtons ----- Assign Navigation Buttons names so that DC DataManger do all required with it Note: Navigation Buttons are Buttons which enable you navigate through recordset by moving it first , previous . next and last . Syntax: Public Sub NavigationButtons(ByVal dm_First As String, ByVal dm_Previous As String, ByVal dm_Next As String, ByVal dm_Last As String) Example: DM.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") ManipulationButtons ----- Assign Manipulation Buttons names so that DC DataManger do all required with it Note: Manipulation Buttons are Buttons which enable you add , edit , save or delete records in your recordset . Syntax: Function ManipulationButtons(ByVal dm_Save As String, ByVal dm_New As String, ByVal dm_Delete As String, ByVal dm_Close As String, Optional ByVal dm_Search As String = Nothing) Example: DM.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") Sensitive F1 DataHelp ----- When you AddRelatedValue and your focus is located in the control defined in str_Control (which is control came) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the control defined in str_RetControl parameter When you AddGridRelatedValue and your focus is located in the column defined in str_Column (which is Column name) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the column defined in str_GridRetColumn parameter Sensitive F12 Help ----- When you press F12 Key , this trigger a sensitive help ,this require Create a new table , name it \"Help\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Description Text 50 Contents Memo 3. Fill Tag field with your Form Tag 4. Fill Id Field with your control name 5. Fill Id Field with DataGrid name followed with underscore character \"_\" , which will be something like this \"axDatagrid_ProductId\" 6. Fill Description field with your control Description 7. Fill Contents field with your supported help for this control Note: To change your form text put form name in both field tag and id TranslateForm We support Multi Language Applications , you can use same application with different languages All you need is: Create a new table , name it \"Multilanguage\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Language1 Text 50 Language2 Text 50 3. Fill Tag field with your Form Name 4. Fill Id Field with your Label name 5. Fill Language1 field with your first language translation 6. Fill Language2 field with your second language translation and so on , you can add many languages as you like , no limitation ! Note: to change form text put form name in both field tag and id Syntax: Function TranslateForm(ByRef dm_Form As System.Windows.Forms.Form, ByVal dm_Language As Byte) Example: DM.TranslateForm(Me, 3) This will populate your form text and all its labels with your translation in field \"Languge3\" in table \"Multilanguage\" Example of French Translation FlipForm We support eastern languages Arabic , Chinese and so on so we support right to left alignment and orientation , we rotate form horizontally 180 Syntax: Function FlipForm(ByRef dm_Form As System.Windows.Forms.Form) Example: DM.FlipForm(Me) DM.TranslateForm(Me, 2) DM.Rifgt2Left(True) this will load Arabic language which located in field language2 and flip form horizontally and align text right to left what amazing ! Right2Left we support eastern languages so we align all your text right if you want Syntax: Function Right2Left(ByVal Mode As Boolean) Example: DM.Right2Left(True) EnableReturnKey ----- Enable you navigate through controls with Return key as with tab key Syntax: Function EnableReturnKey(ByVal Mode As Boolean) Example: DM.EnableReturnKey(True) Configuration Utility We supply you with Configuration Utility which enable you to assign your own language used with DC.DataManger Tutorial This tutorial describe most of features supported by DC.DataManger also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Data Manger\\Tutorial\\ Dim DM As New DynamicComponents.DataManger() Dim aImage(26) As String Dim CN As New ADODB.Connection() Dim oMaster As New ADODB.Recordset() Dim oDetails As New ADODB.Recordset() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load PopulateaImage() CN.Open(\"DSN=Me\") oMaster.Open(\"Orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oDetails.Open(\"OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) DM.InitForm(CN, Me, oMaster, AxDataGrid1, oDetails) DM.PrepareImageButtons(aImage, \"F:\\DataManage-ADO\\icons\\\", False) DM.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") DM.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") DM.KeyFields(\"OrderId\") DM.SetLink(\"OrderId\", \"OrderId\") AxDataGrid1.DataSource = oDetails DM.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) DM.AddRelatedValue(\"Shippers\", \"ShipperId\", \"ShipVia\", \"CompanyName\", \"xCompanyName\", 2) DM.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) DM.KeyLeaveField(oMaster, \"OrderId\", 5) DM.RequiredFields(\"OrderId+OrderDate+CustomerId\") DM.NumericFields(\"CustomerID\", \"OrderId\", \"ShipVia\") DM.DecimalFields(\"Freight\") DM.DateFields(\"OrderDate\") DM.DecimalPlaces(2) DM.EnableReturnKey(True) DM.Right2Left(True) DM.FlipForm(Me) DM.TranslateForm(Me, 1) DM.PopulateForm(Me, oMaster, AxDataGrid1, oDetails) End Sub Private Sub PopulateaImage() aImage(0) = \"First.ico\" aImage(1) = \"FirstOver.ico\" aImage(2) = \"FirstDown.ico\" aImage(3) = \"Previous.ico\" aImage(4) = \"PreviousOver.ico\" aImage(5) = \"PreviousDown.ico\" aImage(6) = \"Next.ico\" aImage(7) = \"NextOver.ico\" aImage(8) = \"NextDown.ico\" aImage(9) = \"Last.ico\" aImage(10) = \"LastOver.ico\" aImage(11) = \"LastDown.ico\" aImage(12) = \"Ok.ico\" aImage(13) = \"OkOver.ico\" aImage(14) = \"OkDown.ico\" aImage(15) = \"New.ico\" aImage(16) = \"NewOver.ico\" aImage(17) = \"NewDown.ico\" aImage(18) = \"Delete.ico\" aImage(19) = \"DeleteOver.ico\" aImage(20) = \"DeleteDown.ico\" aImage(21) = \"Exit.ico\" aImage(22) = \"ExitOver.ico\" aImage(23) = \"ExitDown.ico\" aImage(24) = \"Search.ico\" aImage(25) = \"SearchOver.ico\" aImage(26) = \"SearchDown.ico\" End Sub Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.AppProtector Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC DataManger Version: 1.0","title":"**DynamicComponents DataManger -----**"},{"location":"DC/Data%20Manger/#dynamiccomponents-datamanger-","text":"","title":"DynamicComponents DataManger -----"},{"location":"DC/Data%20Manger/#overview","text":"DC.DataManger is a high-performance COM-based environments such as Visual Basic, Visual C++ , it is only 80 KB DLL , so enjoy speed performance. DC.DataManger class has all the magic ,imaginary and incredible features you can find any where in the market. DC.DataManger is an enhanced class that handles all aspects required with a data form (including single form and master-details form). DC.DataManger class handles all the events required that you rarely need few lines of additional programming code. DC.DataManger class is the best decision for software companies which needs programming on no time or companies depends on novice programmers . EgyFirst has done a lot of work for you. You define few methods and properties of DC.DataManger class and we do the rest.","title":"Overview"},{"location":"DC/Data%20Manger/#features-","text":"Few Lines to add in your Form_Load event and you will get full control over your form and all included (TextBox - Lables-Buttons-Grid-Recordset) and all related events (Leave-paint-Keypress-AfterColEdit-OnAddNew-Click-MouseEnter-MouseLeave-MouseDown-Enter) You can: Navigate first ,previous , next and last Add new records ,edit it ,save it , or delete it Retrieve related names to your fields code Trigger sensitive DataHelp to select from by pressing F1 Trigger sensitive Help by pressing F12 Validate your entry by restrict it to predefined type(Numeric-Alphabetic-AlphaNumeric-Date-Decimal) or to your defined characters Notify you with red forecolor if your entry is not proper Format data by define decimal places for numeric entry , or define letter case for charactes entry Change button image according to mouse movement or focus change Support MultiLanguage Application , by populate form labels with predefined translation automatically Support Eastern Language , we support right to left application by changing alignment to right and orientation by flip form horizontally 180 Enable you navigate through controls with Return key as with tab key Example: dm. InitForm (CN, Me, oMaster, AxDataGrid1, oDetails) dm. PrepareImageButtons (aImage, \"C:\\DataManage\\Icons\\\", False) dm. NavigationButtons (\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") dm. ManageButtons (\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") dm. KeyFields (\"OrderId\") dm. SetLink (\"OrderId\", \"OrderId\") dm. AddRelatedValue (\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) dm. AddGridRelatedValue (\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) dm. KeyLeaveField (oMaster, \"OrderId\", 5) dm. RequiredFields (\"OrderId+OrderDate+CustomerId\") dm. NumericFields (\"CustomerID\", \"OrderId\", \"ShipVia\") dm. DateFields (\"OrderDate\") dm. PopulateForm (Me, oMaster, AxDataGrid1, oDetails) after this few lines you will get full automated controling on your form without any additional code to write , it is incredible !","title":"Features -----"},{"location":"DC/Data%20Manger/#convention","text":"There are Two Rules you must know about DC.DataManger Textbox Controls which located in your data form must have the same names as their Fields names in related table and Columns Controls which involved in your datagrid must have the same names as their Fields names in related table for details Textbox Controls which located in your data form and not have related Field in related table must begin with \"x\" or \"X\" character , you can not name related Textbox Control with \"X\" or \"x\" prefix","title":"Convention"},{"location":"DC/Data%20Manger/#system-requirements-","text":"DC.DataManger runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP.","title":"System Requirements -----"},{"location":"DC/Data%20Manger/#installing-dcdatamanger-","text":"The DC.DataManger setup program will automatically register the DC_DataManger10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.DataManger-----"},{"location":"DC/Data%20Manger/#including-dcdatamanger","text":"To include DC.DataManger in your project From Project menu select add reference Push Browse button to locate your DC_DataManger10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Be sure that Micorsoft DataGrid Control Vresion 6.0 (OLEDB) is included in your Toolbox , if not then right click Toolbox From shortcut menu select customize Toolbox From customize Toolbox Dialog ,scroll down and check Micorsoft DataGrid Control Version 6.0 (OLEDB)","title":"Including DC.DataManger"},{"location":"DC/Data%20Manger/#deploying-dcdatamanger-applications-","text":"The only file needs to be distributed with DC.DatManger COM applications is DC_DataManger10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 Note : If you deploy a translated application with your local language , you must deploy DCDM10_Lang.dll which located in your system directory which is by default [C:\\Windows\\System32](file:///C:/Windows/System32/) and place it in end user system directory","title":"Deploying DC.DataManger Applications -----"},{"location":"DC/Data%20Manger/#how-to-create-a-dsn","text":"1- Open Windows\u2019 ODBC Data Source Administrator as follows: In Windows 95, 98, or NT, choose Start > Settings > Control Panel, then double-click the ODBC Data Sources icon. Depending on your system, the icon could also be called ODBC or 32bit ODBC. in Windows 2000, choose Start > Settings > Control Panel > Administrative Tools > Data Sources. In Windows XP, choose Start > Control Panel > Performance and Maintenance > Administrative Tools > Data Sources (ODBC). 2 - Click the System DSN tab. The tab displays the list of DSNs currently on your system. 3- Click Add to add a new DSN to the list. The Create New Data Source dialog box appears, listing all the drivers currently loaded on your system. 4- Select a driver from the list, then click Finish Example: If your database is a Microsoft Access file, select Microsoft Access Driver (*.mdb). If a driver for your product does not appear in the list, you\u2019ll have to download the driver from a vendor\u2019s website and install it. In the dialog box that appears, enter a name for the DSN and specify the connection parameters. The dialog boxes for specifying parameters differ depending on the driver you selected. For the Microsoft Access Driver, you enter a name, click Select, locate the database file on the hard disk, and click OK. Click OK to close the dialog box. The new DSN is added to your list of system DSNs.","title":"How to Create a DSN"},{"location":"DC/Data%20Manger/#initform","text":"","title":"InitForm"},{"location":"DC/Data%20Manger/#-","text":"Prepare form to know every thing about the form and its controls and all binding data . so it must be the first assignment in your code . an errors may occurs if you do not","title":"-----"},{"location":"DC/Data%20Manger/#syntax","text":"Function InitForm(ByRef dm_DSN As ADODB.Connection, ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) dm_DSN is a reference to your DSN connection dm_Form is a reference to your form which passed as 'Me' keyword dm_MasterTable is a reference to your Master Recordset Optional dm_Grid (if your form has a grid) is a reference to your grid Optional dm_DetailTable (if your form has a grid) is a reference to your Details Recordset Example: Dim oMaster As New ADODB.Recordset() Dim oDetails As New ADODB.Recordset() Dim DM As New DataManger() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load CN.Open(\"DSN=NorthWind\") oMaster.Open(\"Orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oDetails.Open(\"OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) DM.InitForm(CN, Me, oMaster, AxDataGrid1, oDetails) End Sub","title":"syntax:"},{"location":"DC/Data%20Manger/#keyfields","text":"","title":"KeyFields"},{"location":"DC/Data%20Manger/#-_1","text":"it assigns the fields in your Recordset which not allowed to duplicate Syntax: Function KeyFields(ByVal str_KeyFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.KeyFields(\"Flag+OrderId\")","title":"-----"},{"location":"DC/Data%20Manger/#keyleavefield","text":"","title":"KeyLeaveField"},{"location":"DC/Data%20Manger/#-_2","text":"it assigns the fields in your Recordset which will retieve new data when focus chang away from it Syntax: Function KeyLeaveField(ByRef dm_MasterTable As ADODB.Recordset, ByVal str_KeyLeaveField As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.KeyLeaveField(oMaster, \"OrderId\", 5)","title":"-----"},{"location":"DC/Data%20Manger/#setlink-","text":"It assigns the fields in your Master Recordset which are linked to related fields in Details Recordset Syntax: Function Sub SetLink(ByVal str_MasterFields As String, ByVal str_DetailFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.SetLink(\"Flag+OrderId\", \"Flag+OrderId\") e","title":"SetLink -----"},{"location":"DC/Data%20Manger/#addrelatedvalue-","text":"Retrieve the related value to your field code assume you save Cust_Code in your master recordset when you retrieve data you also want to get Cust_Name form Customers table . AddRelatedValue Function do that for you easily Syntax: Function AddRelatedValue(ByRef str_Table As String, ByVal str_Key As String, ByVal str_Control As String, ByVal str_RetValue As String, ByVal str_RetControl As String, Optional ByVal n_ZeroPad As Byte = 0) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3)","title":"AddRelatedValue -----"},{"location":"DC/Data%20Manger/#addgridrelatedvalue-","text":"It retrieve the related value to your grid field code assume you save Productt_Code in your Detail recordset when you retrieve data you also want to get Product_Name form Products table . AddRelatedValue Function do that for you easily Syntax: Function AddGridRelatedValue(ByVal str_Table As String, ByVal str_TableKey As String, ByVal str_Column As String, ByVal str_TableRetField As String, ByVal str_GridRetColumn As String, ByVal n_ZeroPad As Byte) Note: n_ZeroPad parameter padding data with \"0\" character this mean that '34' with n_ZeroPad is 4 will be '0034' this is useful for indexing and searching purposes if you want , remember that is an optional parameter Example: DM.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2)","title":"AddGridRelatedValue -----"},{"location":"DC/Data%20Manger/#flagfield","text":"Sometimes you use table which involve multi tables within , as \"Personal\" table which can involve \"Customers\", \"Suppliers\" , \"Debits\" , \"Credits\" with different flag key you can assign value \"1\" for Customers , assign value \"2\" for Suppliers and so on the rest of fields is the same. We support Tables with Flag field Syntax: Function FlagField(ByVal str_MasterFlagField As String, ByVal str_DetailFlagField As String, ByVal str_FlagValue As String) Example: DM.FlafField(\"Flag\",\"Flag\",\"2\")","title":"FlagField"},{"location":"DC/Data%20Manger/#how-to-select-some-fields","text":"Sometimes you want to include some fields of your detail table , not all its fields the next example do that Example: oDetails.Open(\"select flag , billno , custno , custname , price from OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) That is all !","title":"How to select some fields"},{"location":"DC/Data%20Manger/#search","text":"Easily to search your recordset , add button in your form and notify Manipulation Buttons Function with its name Begin search by clicking search button , all form controls will be empty , now you get in Search Mode Enter your pattern to search and click search button again , now your form has the search result Navigate through records which apply your search pattern by Navigation Buttons Return to Normal Mode by click search button twice","title":"Search"},{"location":"DC/Data%20Manger/#populateform-","text":"it populate your form and its grid with data it recomnded to be last assignment in your Form_Load event Syntax: Function PopulateForm(ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_MasterTable As ADODB.Recordset, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing, Optional ByRef dm_DetailTable As ADODB.Recordset = Nothing) Example: DM.PopulateForm(Me, oMaster, AxDataGrid1, oDetails)","title":"PopulateForm -----"},{"location":"DC/Data%20Manger/#numericfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" Syntax: Function NumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"CustomerID\", \"OrderId\", \"ShipVia\")","title":"NumericFields -----"},{"location":"DC/Data%20Manger/#alphabeticfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" additional to upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" Syntax: Function AlphabeticFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"FirstName\", \"FamilyName\")","title":"AlphabeticFields -----"},{"location":"DC/Data%20Manger/#alphanumericfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"abcdefghijklmnopqrstuvwxyz\" and upper case \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" additional to numeric characters \"0123456789\" Syntax: Function AlphaNumericFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.NumericFields(\"Address\")","title":"AlphaNumericFields -----"},{"location":"DC/Data%20Manger/#datefields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to \"/-\\\" characters when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"30/2/2004\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DateFields(ByVal ParamArray str_DateFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.DateFields(\"OrderDate\")","title":"DateFields -----"},{"location":"DC/Data%20Manger/#decimalfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of allowed character which is\"0123456789\" additional to decimal point '.' data entry will be formated by n decimal places defined in DecimalPlaces Function when you leave the edited Textbox if data entry is not a date you will be notify by changing forecolor to red color until you reedit it correctly suppose you enter date like \"705.3.2\" this is an invalid entry , so you will notify by changing forecolor to red Syntax: Function DecimalFields(ByVal ParamArray str_NumericFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.DecimalFields(\"Freight\")","title":"DecimalFields -----"},{"location":"DC/Data%20Manger/#specialchars-","text":"It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in its parameter Syntax: Function SpecialChars(ByVal str_Chars As String) Example: DM.SpecialChars (\"YyNn\")","title":"SpecialChars -----"},{"location":"DC/Data%20Manger/#specialcharsfields-","text":"It restrict data entry to only valid entry valid entry may be one or more of charcters which is contained in SpecialChars function Syntax: Function SpecialCharsFields(ByVal ParamArray str_SpecialFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.SpecialCharsFields (\"Married\")","title":"SpecialCharsFields -----"},{"location":"DC/Data%20Manger/#requiredfields-","text":"it assigns the fields in your Recordset which can not be empty Syntax: Function RequiredFields(ByVal str_RequiredFields As String) Note: multi fields can concatenated by plus sign '+' Example: DM.RequiredFields(\"OrderId+OrderDate+CustomerId\")","title":"RequiredFields -----"},{"location":"DC/Data%20Manger/#lowercasefields-","text":"It converts all characters to lower case Syntax: Function LowerCaseFields(ByVal ParamArray str_LowerCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.LowerCaseFields (\"SupplierName\")","title":"LowerCaseFields -----"},{"location":"DC/Data%20Manger/#uppercasefields-","text":"It converts all characters to upper case Syntax: Function UpperCaseFields(ByVal ParamArray str_UpperCaseFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.UpperCaseFields (\"ProductName\")","title":"UpperCaseFields -----"},{"location":"DC/Data%20Manger/#decimalplaces-","text":"it formats number by making it in decimal state with n places which you define in your function Syntax: Function DecimalPlaces(ByVal n_DecimalPlaces As Byte) Example: DM.DecimalPlaces(2)","title":"DecimalPlaces -----"},{"location":"DC/Data%20Manger/#firstcharonlyfields-","text":"It converts only First character to upper case Syntax: Function FirstCharOnlyFields(ByVal ParamArray str_FirstCharOnlyFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.FirstCharOnlyFields (\"CustomerName\")","title":"FirstCharOnlyFields -----"},{"location":"DC/Data%20Manger/#firstcharofwordsfields-","text":"It converts First character of every words to upper case Syntax: Function FirstCharOfWordsFields(ByVal ParamArray str_FirstCharOfWordsFields() As String) Note: multi fields can concatenated by comma \",\" Example: DM.FirstCharOfWordsFields(\"CustomerName\")","title":"FirstCharOfWordsFields -----"},{"location":"DC/Data%20Manger/#prepareimagebuttons-","text":"Your Data Form have Navigation & Manipulation Buttons you can assign changeable icons for each button , additionally ,you can assign a motion for each button if you put third parameter to true ,all you need is Buttons without Motion Buttons with Motion Declare an array with 27 element Assign 3 icons for each button First icon for MouseLeave state second icon for MoveOver state third icon for MoveDown state 3. Populate your array respectivly with icons as this sequence FirstButton_MouseLeave , FirstButton_MouseOver, FirstButton_MouseDown PreviousButton_MouseLeave , PreviousButton_MouseOver, PreviousButton_MouseDown NextButton_MouseLeave , NextButton_MouseOver, NextButton_MouseDown LastButton_MouseLeave , LastButton_MouseOver, LastButton_MouseDown SavedataButton_MouseLeave , SavedataButton_MouseOver, SavedataButton_MouseDown NewdataButton_MouseLeave , NewdataButton_MouseOver, NewdataButton_MouseDown DeleteDataButton_MouseLeave , DeleteDataButton_MouseOver, DeleteDataButton_MouseDown CloseFormButton_MouseLeave , CloseFormButton_MouseOver, CloseFormButton_MouseDown and optionally you can add SearchButton_MouseLeave , SearchButton_MouseOver, SearchButton_MouseDown Syntax: Function PrepareImageButtons(ByVal ImagesArray() As String, ByVal ImageFullPath As String, ByVal Motion As Boolean) Example: DM.PrepareImageButtons(aImage, \"C:\\MyApp\\Icons\\\", True) where aImage is your array hold icons third parameter idicate that you wih to show motion with each button","title":"PrepareImageButtons -----"},{"location":"DC/Data%20Manger/#navigationbuttons-","text":"Assign Navigation Buttons names so that DC DataManger do all required with it Note: Navigation Buttons are Buttons which enable you navigate through recordset by moving it first , previous . next and last . Syntax: Public Sub NavigationButtons(ByVal dm_First As String, ByVal dm_Previous As String, ByVal dm_Next As String, ByVal dm_Last As String) Example: DM.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\")","title":"NavigationButtons -----"},{"location":"DC/Data%20Manger/#manipulationbuttons-","text":"Assign Manipulation Buttons names so that DC DataManger do all required with it Note: Manipulation Buttons are Buttons which enable you add , edit , save or delete records in your recordset . Syntax: Function ManipulationButtons(ByVal dm_Save As String, ByVal dm_New As String, ByVal dm_Delete As String, ByVal dm_Close As String, Optional ByVal dm_Search As String = Nothing) Example: DM.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\")","title":"ManipulationButtons -----"},{"location":"DC/Data%20Manger/#sensitive-f1-datahelp-","text":"When you AddRelatedValue and your focus is located in the control defined in str_Control (which is control came) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the control defined in str_RetControl parameter When you AddGridRelatedValue and your focus is located in the column defined in str_Column (which is Column name) parameter you get 2 magic advantages. When you leave from this control you will retrieve respected value related to this control value When you press F1 Key this will trigger DataHelp Browser filled with the table defined in str_Table parameter , you can select any row by double click it , this will close DataHelp Browser and assigned the data selected to the column defined in str_GridRetColumn parameter","title":"Sensitive F1 DataHelp -----"},{"location":"DC/Data%20Manger/#sensitive-f12-help-","text":"When you press F12 Key , this trigger a sensitive help ,this require Create a new table , name it \"Help\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Description Text 50 Contents Memo 3. Fill Tag field with your Form Tag 4. Fill Id Field with your control name 5. Fill Id Field with DataGrid name followed with underscore character \"_\" , which will be something like this \"axDatagrid_ProductId\" 6. Fill Description field with your control Description 7. Fill Contents field with your supported help for this control Note: To change your form text put form name in both field tag and id","title":"Sensitive F12 Help -----"},{"location":"DC/Data%20Manger/#translateform","text":"We support Multi Language Applications , you can use same application with different languages All you need is: Create a new table , name it \"Multilanguage\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Language1 Text 50 Language2 Text 50 3. Fill Tag field with your Form Name 4. Fill Id Field with your Label name 5. Fill Language1 field with your first language translation 6. Fill Language2 field with your second language translation and so on , you can add many languages as you like , no limitation ! Note: to change form text put form name in both field tag and id Syntax: Function TranslateForm(ByRef dm_Form As System.Windows.Forms.Form, ByVal dm_Language As Byte) Example: DM.TranslateForm(Me, 3) This will populate your form text and all its labels with your translation in field \"Languge3\" in table \"Multilanguage\" Example of French Translation","title":"TranslateForm"},{"location":"DC/Data%20Manger/#flipform","text":"We support eastern languages Arabic , Chinese and so on so we support right to left alignment and orientation , we rotate form horizontally 180 Syntax: Function FlipForm(ByRef dm_Form As System.Windows.Forms.Form) Example: DM.FlipForm(Me) DM.TranslateForm(Me, 2) DM.Rifgt2Left(True) this will load Arabic language which located in field language2 and flip form horizontally and align text right to left what amazing !","title":"FlipForm"},{"location":"DC/Data%20Manger/#right2left","text":"we support eastern languages so we align all your text right if you want Syntax: Function Right2Left(ByVal Mode As Boolean) Example: DM.Right2Left(True)","title":"Right2Left"},{"location":"DC/Data%20Manger/#enablereturnkey-","text":"Enable you navigate through controls with Return key as with tab key Syntax: Function EnableReturnKey(ByVal Mode As Boolean) Example: DM.EnableReturnKey(True)","title":"EnableReturnKey -----"},{"location":"DC/Data%20Manger/#configuration-utility","text":"We supply you with Configuration Utility which enable you to assign your own language used with DC.DataManger","title":"Configuration Utility"},{"location":"DC/Data%20Manger/#tutorial","text":"This tutorial describe most of features supported by DC.DataManger also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Data Manger\\Tutorial\\ Dim DM As New DynamicComponents.DataManger() Dim aImage(26) As String Dim CN As New ADODB.Connection() Dim oMaster As New ADODB.Recordset() Dim oDetails As New ADODB.Recordset() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load PopulateaImage() CN.Open(\"DSN=Me\") oMaster.Open(\"Orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oDetails.Open(\"OrderDetails\", CN, oDetails.CursorType.adOpenKeyset, oDetails.LockType.adLockOptimistic) DM.InitForm(CN, Me, oMaster, AxDataGrid1, oDetails) DM.PrepareImageButtons(aImage, \"F:\\DataManage-ADO\\icons\\\", False) DM.NavigationButtons(\"FirstButton\", \"PrevButton\", \"NextButton\", \"LastButton\") DM.ManipulationButtons(\"OkButton\", \"NewButton\", \"DeleteButton\", \"ExitButton\", \"SearchButton\") DM.KeyFields(\"OrderId\") DM.SetLink(\"OrderId\", \"OrderId\") AxDataGrid1.DataSource = oDetails DM.AddRelatedValue(\"Customers\", \"CustomerID\", \"CustomerID\", \"CustomerName\", \"xCustomerName\", 3) DM.AddRelatedValue(\"Shippers\", \"ShipperId\", \"ShipVia\", \"CompanyName\", \"xCompanyName\", 2) DM.AddGridRelatedValue(\"Products\", \"ProductID\", \"ProductID\", \"ProductName\", \"ProductName\", 2) DM.KeyLeaveField(oMaster, \"OrderId\", 5) DM.RequiredFields(\"OrderId+OrderDate+CustomerId\") DM.NumericFields(\"CustomerID\", \"OrderId\", \"ShipVia\") DM.DecimalFields(\"Freight\") DM.DateFields(\"OrderDate\") DM.DecimalPlaces(2) DM.EnableReturnKey(True) DM.Right2Left(True) DM.FlipForm(Me) DM.TranslateForm(Me, 1) DM.PopulateForm(Me, oMaster, AxDataGrid1, oDetails) End Sub Private Sub PopulateaImage() aImage(0) = \"First.ico\" aImage(1) = \"FirstOver.ico\" aImage(2) = \"FirstDown.ico\" aImage(3) = \"Previous.ico\" aImage(4) = \"PreviousOver.ico\" aImage(5) = \"PreviousDown.ico\" aImage(6) = \"Next.ico\" aImage(7) = \"NextOver.ico\" aImage(8) = \"NextDown.ico\" aImage(9) = \"Last.ico\" aImage(10) = \"LastOver.ico\" aImage(11) = \"LastDown.ico\" aImage(12) = \"Ok.ico\" aImage(13) = \"OkOver.ico\" aImage(14) = \"OkDown.ico\" aImage(15) = \"New.ico\" aImage(16) = \"NewOver.ico\" aImage(17) = \"NewDown.ico\" aImage(18) = \"Delete.ico\" aImage(19) = \"DeleteOver.ico\" aImage(20) = \"DeleteDown.ico\" aImage(21) = \"Exit.ico\" aImage(22) = \"ExitOver.ico\" aImage(23) = \"ExitDown.ico\" aImage(24) = \"Search.ico\" aImage(25) = \"SearchOver.ico\" aImage(26) = \"SearchDown.ico\" End Sub","title":"Tutorial"},{"location":"DC/Data%20Manger/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/Data%20Manger/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Data%20Manger/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Data%20Manger/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.AppProtector","title":"How to Register your Copy"},{"location":"DC/Data%20Manger/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC DataManger Version: 1.0","title":"Author Informaion-----"},{"location":"DC/Dynamic%20Report/","text":"DynamicComponents - Dynamic Report----- Powered by System Requirements ----- DC.DynamicReport runs as a COM class for included in any developing langauge support COM based application as Visual Basic , Visual C++ , Borland C++ , Delphi and others .. Installing DC.DynamicReport----- The DC.DynamicReport setup program will automatically register the DC_DynamicReport10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.DynamicReport To include DC.DynamicReport in your project From Project menu select add reference Push Browse button to locate your DC_DynamicReport10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.DynamicReport----- There are two only files need to be distributed with DC.Num2Text COM based applications DC_Dynamic Report10 .dll DC_DynamicReport_Theme.dat this files should be copied to the WinSystem directory which by default is C:\\Windows\\System32 InitReport Function----- InitReport Function , must be your first assignment , an error may occur if you do not We support eastern languages in all of our components , so Dynamic Report comes with support for right to left orientation Syntax: Public Sub InitReport(ByVal Right2Left As Boolean) it takes 1 parameter 1-Right2Left define orientation , if true , this is usuful for eastern language use right orientation Example: oRep.InitReport(False) ReadTheme Function----- ReadTheme function enables you to select from 7 diffrent themes by chanhing theme you change whole appearance of report** Syntax: Public Sub ReadTheme(ByVal int_ThemeID As Theme_ID) int_ThemeID may take any value from 1 to 6 Classic = 1 Blue = 2 Red = 3 Green = 4 Simple = 5 Transparent = 6 Example: oRep.ReadTheme(DynamicComponents.DynamicReport.Theme_ID.Classic) ' if ignored it is by default classic theme LogoImage Function----- LogoImage enables you set your company logo Syntax: Public Sub LogoImage(ByVal str_LogoFile As String, ByVal str_LogoPath As String) it takes 2 parameters 1-str_LogoFile is logo file name 2- str_LogoPath is logo file path Example: oRep.LogoImage(\"Logo.bmp\", \"C:\\Images\\\") SetTitle Function----- SetTitle enables you set the title of the report Syntax: Public Sub SetTitle(ByVal str_Title As String) Example: oRep.SetTitle(\"Customers List\") SetReportHeader Function----- SetReportHeader enables you set your report header lines , you can add as many lines as you want Syntax: Public Sub SetReportHeader(ByVal ParamArray str_Line() As String) it takes a parameter array , so you can add as many header line as you want , delimetered by comma \",\" Example: oRep.SetReportHeader(\"This is Dynamic Report v1.0\", \"It is powered by EgyFirst inc.\", \"Dynamic Components is a trade mark since 2004\") GroupBy Function----- GroupBy function enables you set grouping data , you can add as many lines as you want Syntax: Public Sub GroubBy(ByVal str_GroupField As String, ByVal ShowGroupNavigator As Boolean, ByVal ForceNewPage As Boolean) it takes 3 parameters 1-str_GroupField parameter is the field used to grouping data 2- ShowGroupNavigator parameter determine if you want to show a group navigator or not group navigator enables you to go to directly to selected group 3- ForceNewPage parameter , if true , every group will be viewing and printing in a new page Example: oRep.GroubBy(\"OrderID\", True, True) SumFields Function----- SumFields function enables you to sum defined fields** Syntax: Public Sub SumFields(ByRef ReportTable As ADODB.Recordset, ByVal ParamArray str_Line() As String) it takes 2 parameters 1-ReportTable parameter is a recordset used to populate report 2- str_Line is a parameter array , so you can add as many summed fields as you want , delimetered by comma \",\" Example: Dim oMaster As New ADODB.Recordset() Dim CN As New ADODB.Connection() CN.Open(\"DCDR_NWind\") oMaster.Open(\"Selelct * from orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oRep.SumFields(oMaster, \"Quantity\",\"Value\") SetCaption Function----- SetCaption function enables you set caption for fields which may differ from its names this mean a field named \"ID\" may get a new caption like \"Customer ID\" Syntax: Public Sub SetCaption(ByVal ParamArray str_Line() As String) it takes a parameter array , so you can add as many caption as you want , delimetered by comma \",\" Example: oRep.SetCaption(\"Order ID\", \"Product ID\", \"Product Name\", \"Unit Price\", \"Quantity\", \"Discount\") SetReportFooter Function----- SetReportFooter enables you set your report footer lines , you can add as many lines as you want Syntax: Public Sub SetReportFooter(ByVal ParamArray str_Line() As String) it takes a parameter array , so you can add as many header line as you want , delimetered by comma \",\" Example: oRep.SetReportFooter(\"This is your report footer Section\", \"you can add here as many lines as you want\") PopulateReport Function----- PopulateReport function is the function responsible for viewing report , so it must be your last assignment Syntax: Public Sub PopulateReport(ByRef ReportTable As ADODB.Recordset) ReportTable parameter is a recordset used to populate report Example: Dim oMaster As New ADODB.Recordset() Dim CN As New ADODB.Connection() CN.Open(\"DCDR_NWind\") oMaster.Open(\"Selelct * from orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oRep.PopulateReport(oMaster) '' this must be your last assignment Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DynamicReport Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC DynamicReport Version: 1.0","title":"**DynamicComponents - Dynamic Report-----**"},{"location":"DC/Dynamic%20Report/#dynamiccomponents-dynamic-report-","text":"Powered by","title":"DynamicComponents - Dynamic Report-----"},{"location":"DC/Dynamic%20Report/#system-requirements-","text":"DC.DynamicReport runs as a COM class for included in any developing langauge support COM based application as Visual Basic , Visual C++ , Borland C++ , Delphi and others ..","title":"System Requirements -----"},{"location":"DC/Dynamic%20Report/#installing-dcdynamicreport-","text":"The DC.DynamicReport setup program will automatically register the DC_DynamicReport10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.DynamicReport-----"},{"location":"DC/Dynamic%20Report/#including-dcdynamicreport","text":"To include DC.DynamicReport in your project From Project menu select add reference Push Browse button to locate your DC_DynamicReport10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.DynamicReport"},{"location":"DC/Dynamic%20Report/#deploying-dcdynamicreport-","text":"There are two only files need to be distributed with DC.Num2Text COM based applications DC_Dynamic Report10 .dll DC_DynamicReport_Theme.dat this files should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.DynamicReport-----"},{"location":"DC/Dynamic%20Report/#initreport-function-","text":"InitReport Function , must be your first assignment , an error may occur if you do not We support eastern languages in all of our components , so Dynamic Report comes with support for right to left orientation Syntax: Public Sub InitReport(ByVal Right2Left As Boolean) it takes 1 parameter 1-Right2Left define orientation , if true , this is usuful for eastern language use right orientation Example: oRep.InitReport(False)","title":"InitReport Function-----"},{"location":"DC/Dynamic%20Report/#readtheme-function-","text":"ReadTheme function enables you to select from 7 diffrent themes by chanhing theme you change whole appearance of report** Syntax: Public Sub ReadTheme(ByVal int_ThemeID As Theme_ID) int_ThemeID may take any value from 1 to 6 Classic = 1 Blue = 2 Red = 3 Green = 4 Simple = 5 Transparent = 6 Example: oRep.ReadTheme(DynamicComponents.DynamicReport.Theme_ID.Classic) ' if ignored it is by default classic theme","title":"ReadTheme Function-----"},{"location":"DC/Dynamic%20Report/#logoimage-function-","text":"LogoImage enables you set your company logo Syntax: Public Sub LogoImage(ByVal str_LogoFile As String, ByVal str_LogoPath As String) it takes 2 parameters 1-str_LogoFile is logo file name 2- str_LogoPath is logo file path Example: oRep.LogoImage(\"Logo.bmp\", \"C:\\Images\\\")","title":"LogoImage Function-----"},{"location":"DC/Dynamic%20Report/#settitle-function-","text":"SetTitle enables you set the title of the report Syntax: Public Sub SetTitle(ByVal str_Title As String) Example: oRep.SetTitle(\"Customers List\")","title":"SetTitle Function-----"},{"location":"DC/Dynamic%20Report/#setreportheader-function-","text":"SetReportHeader enables you set your report header lines , you can add as many lines as you want Syntax: Public Sub SetReportHeader(ByVal ParamArray str_Line() As String) it takes a parameter array , so you can add as many header line as you want , delimetered by comma \",\" Example: oRep.SetReportHeader(\"This is Dynamic Report v1.0\", \"It is powered by EgyFirst inc.\", \"Dynamic Components is a trade mark since 2004\")","title":"SetReportHeader Function-----"},{"location":"DC/Dynamic%20Report/#groupby-function-","text":"GroupBy function enables you set grouping data , you can add as many lines as you want Syntax: Public Sub GroubBy(ByVal str_GroupField As String, ByVal ShowGroupNavigator As Boolean, ByVal ForceNewPage As Boolean) it takes 3 parameters 1-str_GroupField parameter is the field used to grouping data 2- ShowGroupNavigator parameter determine if you want to show a group navigator or not group navigator enables you to go to directly to selected group 3- ForceNewPage parameter , if true , every group will be viewing and printing in a new page Example: oRep.GroubBy(\"OrderID\", True, True)","title":"GroupBy Function-----"},{"location":"DC/Dynamic%20Report/#sumfields-function-","text":"SumFields function enables you to sum defined fields** Syntax: Public Sub SumFields(ByRef ReportTable As ADODB.Recordset, ByVal ParamArray str_Line() As String) it takes 2 parameters 1-ReportTable parameter is a recordset used to populate report 2- str_Line is a parameter array , so you can add as many summed fields as you want , delimetered by comma \",\" Example: Dim oMaster As New ADODB.Recordset() Dim CN As New ADODB.Connection() CN.Open(\"DCDR_NWind\") oMaster.Open(\"Selelct * from orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oRep.SumFields(oMaster, \"Quantity\",\"Value\")","title":"SumFields Function-----"},{"location":"DC/Dynamic%20Report/#setcaption-function-","text":"SetCaption function enables you set caption for fields which may differ from its names this mean a field named \"ID\" may get a new caption like \"Customer ID\" Syntax: Public Sub SetCaption(ByVal ParamArray str_Line() As String) it takes a parameter array , so you can add as many caption as you want , delimetered by comma \",\" Example: oRep.SetCaption(\"Order ID\", \"Product ID\", \"Product Name\", \"Unit Price\", \"Quantity\", \"Discount\")","title":"SetCaption Function-----"},{"location":"DC/Dynamic%20Report/#setreportfooter-function-","text":"SetReportFooter enables you set your report footer lines , you can add as many lines as you want Syntax: Public Sub SetReportFooter(ByVal ParamArray str_Line() As String) it takes a parameter array , so you can add as many header line as you want , delimetered by comma \",\" Example: oRep.SetReportFooter(\"This is your report footer Section\", \"you can add here as many lines as you want\")","title":"SetReportFooter Function-----"},{"location":"DC/Dynamic%20Report/#populatereport-function-","text":"PopulateReport function is the function responsible for viewing report , so it must be your last assignment Syntax: Public Sub PopulateReport(ByRef ReportTable As ADODB.Recordset) ReportTable parameter is a recordset used to populate report Example: Dim oMaster As New ADODB.Recordset() Dim CN As New ADODB.Connection() CN.Open(\"DCDR_NWind\") oMaster.Open(\"Selelct * from orders\", CN, oMaster.CursorType.adOpenKeyset, oMaster.LockType.adLockOptimistic) oRep.PopulateReport(oMaster) '' this must be your last assignment","title":"PopulateReport Function-----"},{"location":"DC/Dynamic%20Report/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/Dynamic%20Report/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Dynamic%20Report/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Dynamic%20Report/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DynamicReport","title":"How to Register your Copy"},{"location":"DC/Dynamic%20Report/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC DynamicReport Version: 1.0","title":"Author Informaion-----"},{"location":"DC/Form%20Flipper/","text":"DC Form Flipper Powered by Overview DC.FormFlipper is a COM based component that allows you to Support Eastern Language , we support right to left application by changing alignment to right and orientation by flip form horizontally 180 DC.FormFlipper may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. no need to waste time , designing your form again to support multi languages and eastern languages application you design one form and we design the other by flipping it for you Features If you develop multi language application or eastern language application , you must get DC.FormFlipper Only one Line to add in your Form_Load event and we will flip the form with all its controls for you additionally , you can define alignment (Right 2 Left or Left 2 right) Note: It is recommended to use DC.FormTranslator with DC.FormFlipper Example: Dim FF as DynamicComponents.FormFlipper() FF. FlipForm (Me, True) ' Flip form ,so it is right 2 left orientation \\1) First image show orginal form \\2) Second image show form after flipping it horizontally 180 System Requirements DC.FormFlipper runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.FormFlipper The DC.FormFlipper setup program will automatically register the DC_FormFlipper10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.FormFlipper To include DC.FormFlipper in your project From Project menu select add reference Push Browse button to locate your DC_FormFlipper10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.FormFlipper Application The only file needs to be distributed with DC.FormFlipper COM applications is DC_FormFlipper10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 How to Use: FlipForm We support eastern languages Arabic , Chinese and so on so we support right to left alignment and orientation , we rotate form horizontally 180 Syntax: Function FlipForm(ByRef dm_Form As System.Windows.Forms.Form, ByVal Right2Left As Boolean) Example: FF.FlipForm(Me, True) ' Flip form ,so it is right 2 left what amazing ! Note: It is recommended to use DC.FormTranslator with DC.FormFlipper** Tutorial This tutorial describe most of features supported by DC.FormFlipper also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Form Flipper\\Tutorial\\ ``` Dim FF As New DynamicComponents.FormFlipper() Dim CN As New ADODB.Connection() Dim oCust As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oCust.Open(\"Customers\", CN, oCust.CursorType.adOpenKeyset, oCust.LockType.adLockOptimistic) PopulateDate() FF.FlipForm(Me, True) ' Flip form ,so it is right 2 left End Sub","title":"DC Form Flipper"},{"location":"DC/Form%20Flipper/#dc-form-flipper","text":"Powered by","title":"DC Form Flipper"},{"location":"DC/Form%20Flipper/#overview","text":"DC.FormFlipper is a COM based component that allows you to Support Eastern Language , we support right to left application by changing alignment to right and orientation by flip form horizontally 180 DC.FormFlipper may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. no need to waste time , designing your form again to support multi languages and eastern languages application you design one form and we design the other by flipping it for you","title":"Overview"},{"location":"DC/Form%20Flipper/#features","text":"If you develop multi language application or eastern language application , you must get DC.FormFlipper Only one Line to add in your Form_Load event and we will flip the form with all its controls for you additionally , you can define alignment (Right 2 Left or Left 2 right) Note: It is recommended to use DC.FormTranslator with DC.FormFlipper Example: Dim FF as DynamicComponents.FormFlipper() FF. FlipForm (Me, True) ' Flip form ,so it is right 2 left orientation \\1) First image show orginal form \\2) Second image show form after flipping it horizontally 180","title":"Features"},{"location":"DC/Form%20Flipper/#system-requirements","text":"DC.FormFlipper runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP.","title":"System Requirements"},{"location":"DC/Form%20Flipper/#installing-dcformflipper","text":"The DC.FormFlipper setup program will automatically register the DC_FormFlipper10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.FormFlipper"},{"location":"DC/Form%20Flipper/#including-dcformflipper","text":"To include DC.FormFlipper in your project From Project menu select add reference Push Browse button to locate your DC_FormFlipper10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.FormFlipper"},{"location":"DC/Form%20Flipper/#deploying-dcformflipper-application","text":"The only file needs to be distributed with DC.FormFlipper COM applications is DC_FormFlipper10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.FormFlipper Application"},{"location":"DC/Form%20Flipper/#how-to-use","text":"","title":"How to Use:"},{"location":"DC/Form%20Flipper/#flipform","text":"We support eastern languages Arabic , Chinese and so on so we support right to left alignment and orientation , we rotate form horizontally 180 Syntax: Function FlipForm(ByRef dm_Form As System.Windows.Forms.Form, ByVal Right2Left As Boolean) Example: FF.FlipForm(Me, True) ' Flip form ,so it is right 2 left what amazing ! Note: It is recommended to use DC.FormTranslator with DC.FormFlipper**","title":"FlipForm"},{"location":"DC/Form%20Flipper/#tutorial","text":"This tutorial describe most of features supported by DC.FormFlipper also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Form Flipper\\Tutorial\\ ``` Dim FF As New DynamicComponents.FormFlipper() Dim CN As New ADODB.Connection() Dim oCust As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oCust.Open(\"Customers\", CN, oCust.CursorType.adOpenKeyset, oCust.LockType.adLockOptimistic) PopulateDate() FF.FlipForm(Me, True) ' Flip form ,so it is right 2 left End Sub","title":"Tutorial"},{"location":"DC/Form%20Translator/","text":"DynamicComponents - Form Translator----- Powered by Overview DC.FormTranslator is a COM based component that allows you Support MultiLanguage Application , by populate form labels with predefined translation automatically DC.FormTranslator may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. no need to waste time , designing your form again to support multi languages and eastern languages application you design one form and we design the other by translating it for you Features ----- If you develop multi language application or eastern language application , you must get DC.FormTranslator Only one Line to add in your Form_Load event and we will translate the form with all its labels for you Note: It is recommended to use DC.FormFlipper with DC.FormTranslator Example: Dim FT as DynamicComponents.FormTranslator() FT. TranslateForm (Me, CN, 2) 'Trnslate form into French where CN is your DSN , and parameter 2 is language id , here it refer to French language \\1) First image show orginal form in English \\2) Second image show form after translating it into french System Requirements ----- DC.FormTranslator runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.FormTranslator----- The DC.FormTranslator setup program will automatically register the DC_FormTranslator10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.FormTranslator To include DC.FormTranslator in your project From Project menu select add reference Push Browse button to locate your DC_FormTranslator10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.FormTranslator Applications ----- The only file needs to be distributed with DC.FormTranslator COM applications is DC_FormTranslator10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 TranslateForm We support Multi Language Applications , you can use same application with different languages All you need is: Create a new table , name it \"Multilanguage\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Language1 Text 50 Language2 Text 50 3. Fill Tag field with your Form Name 4. Fill Id Field with your Label name 5. Fill Language1 field with your first language translation 6. Fill Language2 field with your second language translation and so on , you can add many languages as you like , no limitation ! Note: to change form text put form name in both field tag and id Syntax: Function TranslateForm(ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_DSN As ADODB.Connection, ByVal dm_Language As Byte) Example: FT.TranslateForm(Me, CN, 2) 'Trnslate form into French This will populate your form text and all its labels with your translation in field \"Languge2\" in table \"Multilanguage\" in database refered to it by DSN named CN in this example Example of French Translation Tutorial This tutorial describe most of features supported by DC.FormTranslator also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Form Translator\\Tutorial\\ Dim FT As New DynamicComponents.FormTranslator() Dim CN As New ADODB.Connection() Dim oOrders As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) PopulateDate() FT.TranslateForm(Me, CN, 2) 'Trnslate form into French End Sub Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DataManger Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC FormTranslator Version: 1.0","title":"**DynamicComponents - Form Translator-----**"},{"location":"DC/Form%20Translator/#dynamiccomponents-form-translator-","text":"Powered by","title":"DynamicComponents - Form Translator-----"},{"location":"DC/Form%20Translator/#overview","text":"DC.FormTranslator is a COM based component that allows you Support MultiLanguage Application , by populate form labels with predefined translation automatically DC.FormTranslator may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. no need to waste time , designing your form again to support multi languages and eastern languages application you design one form and we design the other by translating it for you","title":"Overview"},{"location":"DC/Form%20Translator/#features-","text":"If you develop multi language application or eastern language application , you must get DC.FormTranslator Only one Line to add in your Form_Load event and we will translate the form with all its labels for you Note: It is recommended to use DC.FormFlipper with DC.FormTranslator Example: Dim FT as DynamicComponents.FormTranslator() FT. TranslateForm (Me, CN, 2) 'Trnslate form into French where CN is your DSN , and parameter 2 is language id , here it refer to French language \\1) First image show orginal form in English \\2) Second image show form after translating it into french","title":"Features -----"},{"location":"DC/Form%20Translator/#system-requirements-","text":"DC.FormTranslator runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP.","title":"System Requirements -----"},{"location":"DC/Form%20Translator/#installing-dcformtranslator-","text":"The DC.FormTranslator setup program will automatically register the DC_FormTranslator10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.FormTranslator-----"},{"location":"DC/Form%20Translator/#including-dcformtranslator","text":"To include DC.FormTranslator in your project From Project menu select add reference Push Browse button to locate your DC_FormTranslator10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.FormTranslator"},{"location":"DC/Form%20Translator/#deploying-dcformtranslator-applications-","text":"The only file needs to be distributed with DC.FormTranslator COM applications is DC_FormTranslator10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.FormTranslator Applications -----"},{"location":"DC/Form%20Translator/#translateform","text":"We support Multi Language Applications , you can use same application with different languages All you need is: Create a new table , name it \"Multilanguage\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Language1 Text 50 Language2 Text 50 3. Fill Tag field with your Form Name 4. Fill Id Field with your Label name 5. Fill Language1 field with your first language translation 6. Fill Language2 field with your second language translation and so on , you can add many languages as you like , no limitation ! Note: to change form text put form name in both field tag and id Syntax: Function TranslateForm(ByRef dm_Form As System.Windows.Forms.Form, ByRef dm_DSN As ADODB.Connection, ByVal dm_Language As Byte) Example: FT.TranslateForm(Me, CN, 2) 'Trnslate form into French This will populate your form text and all its labels with your translation in field \"Languge2\" in table \"Multilanguage\" in database refered to it by DSN named CN in this example Example of French Translation","title":"TranslateForm"},{"location":"DC/Form%20Translator/#tutorial","text":"This tutorial describe most of features supported by DC.FormTranslator also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Form Translator\\Tutorial\\ Dim FT As New DynamicComponents.FormTranslator() Dim CN As New ADODB.Connection() Dim oOrders As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) PopulateDate() FT.TranslateForm(Me, CN, 2) 'Trnslate form into French End Sub","title":"Tutorial"},{"location":"DC/Form%20Translator/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/Form%20Translator/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Form%20Translator/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Form%20Translator/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DataManger","title":"How to Register your Copy"},{"location":"DC/Form%20Translator/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC FormTranslator Version: 1.0","title":"Author Informaion-----"},{"location":"DC/Help%20Authority/","text":"DynamicComponents - Help Authority----- Powered by Overview DC.HelpAuthority is a COM based component that allows you to assign a sensitive help for every control in within your form or even every column in your grid DC.HelpAuthority may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. now you can develop your application and make it comprehensive by supporting it with your sensitive help Features ----- DC.HelpAuthority enables you to put the finish touch to your application by adding sensetive help to every control in your form , any column in your grid when you press F12 key this will trigger your sensitive help for focused control or column Example: Dim HA As New DynamicComponents.HelpAuthority() HA. PrepareHelp (CN, Me, Me.AxDataGrid1) System Requirements ----- DC.HelpAuthority runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.HelpAuthority----- The DC.HelpAuthority setup program will automatically register the DC_HelpAuthority10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.HelpAuthority To include DC.HelpAuthorityin your project From Project menu select add reference Push Browse button to locate your DC_HelpAuthority10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.HelpAuthority Applications There are two files need to be distributed with DC.HelpAuthority COM applications DC_HelpAuthority10.dll DCHA10_Lang.dll this files should be copied to the WinSystem directory which by default is C:\\Windows\\System32 PrepareHelp ----- Prepare form to know every thing about the form and its controls and all binding information syntax: Function PrepareHelp(ByRef dm_DSN As ADODB.Connection, ByRef dm_Form As System.Windows.Forms.Form, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing) dm_DSN is a reference to your DSN connection dm_Form is a reference to your form which passed as 'Me' keyword Optional dm_Grid (if your form has a grid) is a reference to your grid Example: Dim HA As New DynamicComponents.HelpAuthority() HA.PrepareHelp(CN, Me, Me.AxDataGrid1) where CN is a reference to your DSN connection and Me is a reference to your form which passed as 'Me' keyword and AxDataGrid1 (if your form has a grid) is a reference to your grid Sensitive F12 Help ----- When you press F12 Key , this trigger a sensitive help ,this require Create a new table , name it \"Help\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Description Text 50 Contents Memo 3. Fill Tag field with your Form Tag 4. Fill Id Field with your control name 5. Fill Id Field with DataGrid name followed with underscore character \"_\" , which will be something like this \"axDatagrid_ProductId\" 6. Fill Description field with your control Description 7. Fill Contents field with your supported help for this control Note: To change your form text put form name in both field tag and id Configuration Utility We supply you with Configuration Utility which enable you to assign your own language used with DC.HelpAuthority Tutorial This tutorial describe most of features supported by DC.HelpAuthority also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Help Authority\\Tutorial\\ Dim HA As New DynamicComponents.HelpAuthority() Dim CN As New ADODB.Connection() Dim oOrders As New ADODB.Recordset() Dim oOrderDetails As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() 'Press F12 to get help to any control on your form Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) oOrderDetails.Open(\"OrderDetails\", CN, oOrderDetails.CursorType.adOpenKeyset, oOrderDetails.LockType.adLockOptimistic) PopulateDate() Me.AxDataGrid1.DataSource = oOrderDetails HA.PrepareHelp(CN, Me, Me.AxDataGrid1) End Sub Contact us ----- Home Page: http://www.dynamic-components.com Sales Email: sales@dynamic-components.com Support Email: support@dynamic-components.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.HelpAuthority Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.dynamic-components.com Product : DC Help Authority Version: 1.0","title":"**DynamicComponents - Help Authority-----**"},{"location":"DC/Help%20Authority/#dynamiccomponents-help-authority-","text":"Powered by","title":"DynamicComponents - Help Authority-----"},{"location":"DC/Help%20Authority/#overview","text":"DC.HelpAuthority is a COM based component that allows you to assign a sensitive help for every control in within your form or even every column in your grid DC.HelpAuthority may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. now you can develop your application and make it comprehensive by supporting it with your sensitive help","title":"Overview"},{"location":"DC/Help%20Authority/#features-","text":"DC.HelpAuthority enables you to put the finish touch to your application by adding sensetive help to every control in your form , any column in your grid when you press F12 key this will trigger your sensitive help for focused control or column Example: Dim HA As New DynamicComponents.HelpAuthority() HA. PrepareHelp (CN, Me, Me.AxDataGrid1)","title":"Features -----"},{"location":"DC/Help%20Authority/#system-requirements-","text":"DC.HelpAuthority runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP.","title":"System Requirements -----"},{"location":"DC/Help%20Authority/#installing-dchelpauthority-","text":"The DC.HelpAuthority setup program will automatically register the DC_HelpAuthority10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.HelpAuthority-----"},{"location":"DC/Help%20Authority/#including-dchelpauthority","text":"To include DC.HelpAuthorityin your project From Project menu select add reference Push Browse button to locate your DC_HelpAuthority10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.HelpAuthority"},{"location":"DC/Help%20Authority/#deploying-dchelpauthority-applications","text":"There are two files need to be distributed with DC.HelpAuthority COM applications DC_HelpAuthority10.dll DCHA10_Lang.dll this files should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.HelpAuthority Applications"},{"location":"DC/Help%20Authority/#preparehelp","text":"","title":"PrepareHelp"},{"location":"DC/Help%20Authority/#-","text":"Prepare form to know every thing about the form and its controls and all binding information syntax: Function PrepareHelp(ByRef dm_DSN As ADODB.Connection, ByRef dm_Form As System.Windows.Forms.Form, Optional ByRef dm_Grid As AxMSDataGridLib.AxDataGrid = Nothing) dm_DSN is a reference to your DSN connection dm_Form is a reference to your form which passed as 'Me' keyword Optional dm_Grid (if your form has a grid) is a reference to your grid Example: Dim HA As New DynamicComponents.HelpAuthority() HA.PrepareHelp(CN, Me, Me.AxDataGrid1) where CN is a reference to your DSN connection and Me is a reference to your form which passed as 'Me' keyword and AxDataGrid1 (if your form has a grid) is a reference to your grid","title":"-----"},{"location":"DC/Help%20Authority/#sensitive-f12-help-","text":"When you press F12 Key , this trigger a sensitive help ,this require Create a new table , name it \"Help\" and put it in your database create 4 fields as specified Name Type Length Tag Text 50 Id Text 50 Description Text 50 Contents Memo 3. Fill Tag field with your Form Tag 4. Fill Id Field with your control name 5. Fill Id Field with DataGrid name followed with underscore character \"_\" , which will be something like this \"axDatagrid_ProductId\" 6. Fill Description field with your control Description 7. Fill Contents field with your supported help for this control Note: To change your form text put form name in both field tag and id","title":"Sensitive F12 Help -----"},{"location":"DC/Help%20Authority/#configuration-utility","text":"We supply you with Configuration Utility which enable you to assign your own language used with DC.HelpAuthority","title":"Configuration Utility"},{"location":"DC/Help%20Authority/#tutorial","text":"This tutorial describe most of features supported by DC.HelpAuthority also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Help Authority\\Tutorial\\ Dim HA As New DynamicComponents.HelpAuthority() Dim CN As New ADODB.Connection() Dim oOrders As New ADODB.Recordset() Dim oOrderDetails As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() 'Press F12 to get help to any control on your form Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oOrders.Open(\"Orders\", CN, oOrders.CursorType.adOpenKeyset, oOrders.LockType.adLockOptimistic) oOrderDetails.Open(\"OrderDetails\", CN, oOrderDetails.CursorType.adOpenKeyset, oOrderDetails.LockType.adLockOptimistic) PopulateDate() Me.AxDataGrid1.DataSource = oOrderDetails HA.PrepareHelp(CN, Me, Me.AxDataGrid1) End Sub","title":"Tutorial"},{"location":"DC/Help%20Authority/#contact-us-","text":"Home Page: http://www.dynamic-components.com Sales Email: sales@dynamic-components.com Support Email: support@dynamic-components.com","title":"Contact us -----"},{"location":"DC/Help%20Authority/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Help%20Authority/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Help%20Authority/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.HelpAuthority","title":"How to Register your Copy"},{"location":"DC/Help%20Authority/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.dynamic-components.com Product : DC Help Authority Version: 1.0","title":"Author Informaion-----"},{"location":"DC/Image%20Button/","text":"DynamicComponents - Image Button----- Powered by System Requirements ----- DC.ImageButton runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.ImageButton----- The DC.ImageButton setup program will automatically register the DC_Image Button10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.ImageButton To include DC.ImageButton in your project From Project menu select add reference Push Browse button to locate your DC_ImageButton10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.ImageButton Applications The only file needs to be distributed with DC.FormFlipper COM applications is DC_FormFlipper10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 PrepareImageButtons ----- This function enables you to assign icons path for button image , additionally ,you can assign a motion for each button if you put second parameter to true Syntax: Function PrepareImageButtons(ByVal ImageFullPath As String, ByVal Motion As Boolean) where ImageFullPath parameter is the path to your button icons and Motion parameter determine if you want assign a motion to your button icons or not Example: IB.PrepareImageButtons(\"C:\\MyApp\\Icons\\\", True) where \"[C:\\MyApp\\Icons](file:///C:/MyApp/Icons/)\" is the path to your button icons and you detrmine your buttons to has a motion action Buttons without Motion Buttons with Motion AddImageButton Assign icons for every button state , when mouse over , mouse down , mouse up Syntax: Public AddImageButton(ByRef ButtonName As Windows.Forms.Button, ByVal img_MouseLeave As String, ByVal img_MouseEnter As String, ByVal img_MouseDown As String) where img_MouseLeave parameter is the icon appear where mouse leave button and img_MouseEnter parameter is the icon appear where mouse over the button and img_MouseDown parameter is the icon appear where mouse pressed Example: Dim IB As New DynamicComponents.ImageButton() IB.AddImageButton(Me.FirstButton, \"first.ico\", \"firstover.ico\", \"firstdown.ico\") IB.AddImageButton(Me.PreviousButton, \"previous.ico\", \"previousover.ico\", \"previousdown.ico\") IB.AddImageButton(Me.NextButton, \"next.ico\", \"nextover.ico\", \"nextdown.ico\") IB.AddImageButton(Me.LastButton, \"last.ico\", \"lastover.ico\", \"lastdown.ico\") Buttons without Motion Buttons with Motion Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.ImageButton Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC Image Button Version: 1.0","title":"**DynamicComponents - Image Button-----**"},{"location":"DC/Image%20Button/#dynamiccomponents-image-button-","text":"Powered by","title":"DynamicComponents - Image Button-----"},{"location":"DC/Image%20Button/#system-requirements-","text":"DC.ImageButton runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP.","title":"System Requirements -----"},{"location":"DC/Image%20Button/#installing-dcimagebutton-","text":"The DC.ImageButton setup program will automatically register the DC_Image Button10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.ImageButton-----"},{"location":"DC/Image%20Button/#including-dcimagebutton","text":"To include DC.ImageButton in your project From Project menu select add reference Push Browse button to locate your DC_ImageButton10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.ImageButton"},{"location":"DC/Image%20Button/#deploying-dcimagebutton-applications","text":"The only file needs to be distributed with DC.FormFlipper COM applications is DC_FormFlipper10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.ImageButton Applications"},{"location":"DC/Image%20Button/#prepareimagebuttons-","text":"This function enables you to assign icons path for button image , additionally ,you can assign a motion for each button if you put second parameter to true Syntax: Function PrepareImageButtons(ByVal ImageFullPath As String, ByVal Motion As Boolean) where ImageFullPath parameter is the path to your button icons and Motion parameter determine if you want assign a motion to your button icons or not Example: IB.PrepareImageButtons(\"C:\\MyApp\\Icons\\\", True) where \"[C:\\MyApp\\Icons](file:///C:/MyApp/Icons/)\" is the path to your button icons and you detrmine your buttons to has a motion action Buttons without Motion Buttons with Motion","title":"PrepareImageButtons -----"},{"location":"DC/Image%20Button/#addimagebutton","text":"Assign icons for every button state , when mouse over , mouse down , mouse up Syntax: Public AddImageButton(ByRef ButtonName As Windows.Forms.Button, ByVal img_MouseLeave As String, ByVal img_MouseEnter As String, ByVal img_MouseDown As String) where img_MouseLeave parameter is the icon appear where mouse leave button and img_MouseEnter parameter is the icon appear where mouse over the button and img_MouseDown parameter is the icon appear where mouse pressed Example: Dim IB As New DynamicComponents.ImageButton() IB.AddImageButton(Me.FirstButton, \"first.ico\", \"firstover.ico\", \"firstdown.ico\") IB.AddImageButton(Me.PreviousButton, \"previous.ico\", \"previousover.ico\", \"previousdown.ico\") IB.AddImageButton(Me.NextButton, \"next.ico\", \"nextover.ico\", \"nextdown.ico\") IB.AddImageButton(Me.LastButton, \"last.ico\", \"lastover.ico\", \"lastdown.ico\") Buttons without Motion Buttons with Motion","title":"AddImageButton"},{"location":"DC/Image%20Button/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/Image%20Button/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Image%20Button/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Image%20Button/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.ImageButton","title":"How to Register your Copy"},{"location":"DC/Image%20Button/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC Image Button Version: 1.0","title":"Author Informaion-----"},{"location":"DC/Num2Text/","text":"DynamicComponents - Num2Text----- Powered by Overview DC.Num2Text is a COM based component that convert numerical values into words in 4 languages For example, the numerical value 7431285.46 would be translated into the text in English will be: Seven millions , four hundreds and thirty one thousands , two hundreds and eighty five dollars and forty six cents in French will be: Sept millions , quatre cents et trente un milliers , deux cents et quatre-vingt cinq euro et quarante six cents in German will be: Sieben Millionen , vier Hunderte eins und drei\u0643ig Tausenden , zwei Hunderte f\u00fcnf und achtzig euro sechs und vierzig cents in Arabic will be: the most useful use DC.Num2Text is with Cheque Production Systems and finical reports in business application . EgyFirst has done a lot of work for you. You define your number and we translate it to your preferred language. Features ----- for Now DC.Num2Text can convert your number into 4 languages (Arabic-English-French-German) but we are looking to get feedback from our customers and we will prioritise the our development efforts based on customer requirements. Just : email us with your language & concept used in counting with several examples. Example: Dim oTextNum As New DynamicComponents.Num2Text() dim strNum as string strNum = oTextNum. TranslateNumber (\"159584.58\", Num2Text.Language_ID.English) // translate into English System Requirements ----- DC.Num2Text runs as a COM class for included in any developing langauge support COM based application as Visual Basic , Visual C++ , Borland C++ , Delphi and others .. Installing DC.Num2Text----- The DC.Num2Text setup program will automatically register the DC_Num2Text10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.Num2Text To include DC.Num2Text in your project From Project menu select add reference Push Browse button to locate your AppProtector10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.Num2Text----- The only file needs to be distributed with DC.Num2Text COM based applications is DC_Num2Text10 .dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 TranslateNumber Function----- TranslateNumber is the function responsible for translating numbers into proper language Syntax: Public Function TranslateNumber(ByVal str_Number As String, ByVal Lang As Language_ID) As String it takes 2 parameters first parameter is number wanted to translate second parameter is language ID where 1 mean translating into Arabic Language 2 mean translating into English Language 3 mean translating into French Language 4 mean translating into German Language Example: dim strNum = TranslateNumber (\"49562854\",3) // translate into French language SetCurrency Function SetCurrency function enables you customize your currency default currency used by English language is Dollar , while Euro is default currency for French and German Languages , and is default currency for Arabic Language Syntax: Public Sub SetCurrency(ByVal str_Currency As String, ByVal str_CurrencyUnit As String, ByVal str_CurrencyPlural As String, ByVal str_CurrencyUnitPlural As String) this function takes 4 Parameters first parameter str_Currency is your customized currency in single first parameter str_CurrencyUnit is your customized currency unit in single first parameter str_CurrencyPlural is your customized currency in plural first parameter str_CurrencyUnitPlural is your customized currency in plural Example: SetCurrency(\"pound\",\"piaster\",\"pounds\",\"piasters\") when you use TtranslateNumber function , result may be something like that four hundreds and twenty one pounds and twenty three piasters Tutorial This tutorial describe all features supported by DC.Num2Text also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Num2Text\\Tutorial\\ dim oTextNum As New DynamicComponents.Num2Text() dim strNum as string oTextNum.SetCurrency(\"Dollar\", \"Cent\", \"Dollars\", \"Cents\") strNum = oTextNum. TranslateNumber (\"159584.58\", DynamicComponents.Num2Text.Language_ID.English) // translate into English Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.Num2Text Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC Num2Text Version: 1.0","title":"**DynamicComponents - Num2Text-----**"},{"location":"DC/Num2Text/#dynamiccomponents-num2text-","text":"Powered by","title":"DynamicComponents - Num2Text-----"},{"location":"DC/Num2Text/#overview","text":"DC.Num2Text is a COM based component that convert numerical values into words in 4 languages For example, the numerical value 7431285.46 would be translated into the text in English will be: Seven millions , four hundreds and thirty one thousands , two hundreds and eighty five dollars and forty six cents in French will be: Sept millions , quatre cents et trente un milliers , deux cents et quatre-vingt cinq euro et quarante six cents in German will be: Sieben Millionen , vier Hunderte eins und drei\u0643ig Tausenden , zwei Hunderte f\u00fcnf und achtzig euro sechs und vierzig cents in Arabic will be: the most useful use DC.Num2Text is with Cheque Production Systems and finical reports in business application . EgyFirst has done a lot of work for you. You define your number and we translate it to your preferred language.","title":"Overview"},{"location":"DC/Num2Text/#features-","text":"for Now DC.Num2Text can convert your number into 4 languages (Arabic-English-French-German) but we are looking to get feedback from our customers and we will prioritise the our development efforts based on customer requirements. Just : email us with your language & concept used in counting with several examples. Example: Dim oTextNum As New DynamicComponents.Num2Text() dim strNum as string strNum = oTextNum. TranslateNumber (\"159584.58\", Num2Text.Language_ID.English) // translate into English","title":"Features -----"},{"location":"DC/Num2Text/#system-requirements-","text":"DC.Num2Text runs as a COM class for included in any developing langauge support COM based application as Visual Basic , Visual C++ , Borland C++ , Delphi and others ..","title":"System Requirements -----"},{"location":"DC/Num2Text/#installing-dcnum2text-","text":"The DC.Num2Text setup program will automatically register the DC_Num2Text10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.Num2Text-----"},{"location":"DC/Num2Text/#including-dcnum2text","text":"To include DC.Num2Text in your project From Project menu select add reference Push Browse button to locate your AppProtector10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.Num2Text"},{"location":"DC/Num2Text/#deploying-dcnum2text-","text":"The only file needs to be distributed with DC.Num2Text COM based applications is DC_Num2Text10 .dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.Num2Text-----"},{"location":"DC/Num2Text/#translatenumber-function-","text":"TranslateNumber is the function responsible for translating numbers into proper language Syntax: Public Function TranslateNumber(ByVal str_Number As String, ByVal Lang As Language_ID) As String it takes 2 parameters first parameter is number wanted to translate second parameter is language ID where 1 mean translating into Arabic Language 2 mean translating into English Language 3 mean translating into French Language 4 mean translating into German Language Example: dim strNum = TranslateNumber (\"49562854\",3) // translate into French language","title":"TranslateNumber Function-----"},{"location":"DC/Num2Text/#setcurrency-function","text":"SetCurrency function enables you customize your currency default currency used by English language is Dollar , while Euro is default currency for French and German Languages , and is default currency for Arabic Language Syntax: Public Sub SetCurrency(ByVal str_Currency As String, ByVal str_CurrencyUnit As String, ByVal str_CurrencyPlural As String, ByVal str_CurrencyUnitPlural As String) this function takes 4 Parameters first parameter str_Currency is your customized currency in single first parameter str_CurrencyUnit is your customized currency unit in single first parameter str_CurrencyPlural is your customized currency in plural first parameter str_CurrencyUnitPlural is your customized currency in plural Example: SetCurrency(\"pound\",\"piaster\",\"pounds\",\"piasters\") when you use TtranslateNumber function , result may be something like that four hundreds and twenty one pounds and twenty three piasters","title":"SetCurrency Function"},{"location":"DC/Num2Text/#tutorial","text":"This tutorial describe all features supported by DC.Num2Text also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\Num2Text\\Tutorial\\ dim oTextNum As New DynamicComponents.Num2Text() dim strNum as string oTextNum.SetCurrency(\"Dollar\", \"Cent\", \"Dollars\", \"Cents\") strNum = oTextNum. TranslateNumber (\"159584.58\", DynamicComponents.Num2Text.Language_ID.English) // translate into English","title":"Tutorial"},{"location":"DC/Num2Text/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/Num2Text/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/Num2Text/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/Num2Text/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.Num2Text","title":"How to Register your Copy"},{"location":"DC/Num2Text/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC Num2Text Version: 1.0","title":"Author Informaion-----"},{"location":"DC/ReturnKey%20Enabled/","text":"DynamicComponents - ReturnKeyEnable----- Powered by Overview DC.ReturnKeyEnable is a COM based component that enables you navigate thriugh form controls using Retun key as with Tab Key DC.ReturnKeyEnable may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. no need to waste time , defining events to every control within your form to handle Return key press you design your form as usual and we allow you move through its controls as wanted Features ----- Only one line of code and you can move easily through your form controls without any additional programming that is all !! Example: RKE. EnableReturnKey (Me, True) //' Now you can use Return Key to move through contols insted of Tab Key System Requirements ----- DC.ReturnKeyEnable runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP. Installing DC.ReturnKeyEnable----- The DC.ReturnKeyEnable setup program will automatically register the DC_ReturnKeyEnable10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system. Including DC.ReturnKeyEnable To include DC.ReturnKeyEnable in your project From Project menu select add reference Push Browse button to locate your DC_ReturnKeyEnable10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references Deploying DC.ReturnKey Enable Applications ----- The only file needs to be distributed with DC.ReturnKeyEnable COM applications is DC_ReturnKeyEnable 10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32 EnableReturnKey ----- Enable you navigate through controls with Return key as with tab key Syntax: Function EnableReturnKey(ByVal Mode As Boolean) Example: RKE.EnableReturnKey(True) Tutorial This tutorial describe most of features supported by DC.ReturnKeyEnable also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\ReturnKeyEnable\\Tutorial\\ Dim RKE As New DynamicComponents.ReturnKeyEnable() Dim CN As New ADODB.Connection() Dim oCust As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oCust.Open(\"Customers\", CN, oCust.CursorType.adOpenKeyset, oCust.LockType.adLockOptimistic) PopulateDate() RKE.EnableReturnKey(Me, True) //' Now you can use Return Key to move through contols insted of Tab Key End Sub Contact us ----- Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com License ----- Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail . How to order ----- Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately. How to Register your Copy After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DataManger Author Informaion----- Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC ReturnKeyEnable Version: 1.0","title":"**DynamicComponents - ReturnKeyEnable-----**"},{"location":"DC/ReturnKey%20Enabled/#dynamiccomponents-returnkeyenable-","text":"Powered by","title":"DynamicComponents - ReturnKeyEnable-----"},{"location":"DC/ReturnKey%20Enabled/#overview","text":"DC.ReturnKeyEnable is a COM based component that enables you navigate thriugh form controls using Retun key as with Tab Key DC.ReturnKeyEnable may be used with any developing language support COM based application like Visual Basic,Visual C++,Borland C++,Delphi and others .. EgyFirst has done a lot of work for you. no need to waste time , defining events to every control within your form to handle Return key press you design your form as usual and we allow you move through its controls as wanted","title":"Overview"},{"location":"DC/ReturnKey%20Enabled/#features-","text":"Only one line of code and you can move easily through your form controls without any additional programming that is all !! Example: RKE. EnableReturnKey (Me, True) //' Now you can use Return Key to move through contols insted of Tab Key","title":"Features -----"},{"location":"DC/ReturnKey%20Enabled/#system-requirements-","text":"DC.ReturnKeyEnable runs as a COM class for Developing with Visual Basic.Net under Microsoft Windows 98/NT/ 2000 or Windows XP.","title":"System Requirements -----"},{"location":"DC/ReturnKey%20Enabled/#installing-dcreturnkeyenable-","text":"The DC.ReturnKeyEnable setup program will automatically register the DC_ReturnKeyEnable10.dll file on your system. There is no need to manually run RegSvr32.exe on your development system.","title":"Installing DC.ReturnKeyEnable-----"},{"location":"DC/ReturnKey%20Enabled/#including-dcreturnkeyenable","text":"To include DC.ReturnKeyEnable in your project From Project menu select add reference Push Browse button to locate your DC_ReturnKeyEnable10.DLL file which by default located in c:\\windows\\system32 , now the specific DLL included in your references","title":"Including DC.ReturnKeyEnable"},{"location":"DC/ReturnKey%20Enabled/#deploying-dcreturnkey-enable-applications-","text":"The only file needs to be distributed with DC.ReturnKeyEnable COM applications is DC_ReturnKeyEnable 10.dll this file should be copied to the WinSystem directory which by default is C:\\Windows\\System32","title":"Deploying DC.ReturnKey Enable Applications -----"},{"location":"DC/ReturnKey%20Enabled/#enablereturnkey-","text":"Enable you navigate through controls with Return key as with tab key Syntax: Function EnableReturnKey(ByVal Mode As Boolean) Example: RKE.EnableReturnKey(True)","title":"EnableReturnKey -----"},{"location":"DC/ReturnKey%20Enabled/#tutorial","text":"This tutorial describe most of features supported by DC.ReturnKeyEnable also you can refer to the project example which installed by default into C:\\Program Files\\Dynamic Components\\ReturnKeyEnable\\Tutorial\\ Dim RKE As New DynamicComponents.ReturnKeyEnable() Dim CN As New ADODB.Connection() Dim oCust As New ADODB.Recordset() Dim oAccess As New Access.Application() Dim DAO_DBEngine As New DAO.DBEngine() Private Sub TestForm_Load(ByVal eventSender As System.Object, ByVal eventArgs As System.EventArgs) Handles MyBase.Load 'establish DSN oAccess.DBEngine.RegisterDatabase(\"DCDM_Nwind\", \"Microsoft Access Driver (*.mdb)\", True, \"DBQ=\" & VB6.GetPath & \"\\Nwind.mdb\") CN.Open(\"DSN=DCDM_NWind\") oCust.Open(\"Customers\", CN, oCust.CursorType.adOpenKeyset, oCust.LockType.adLockOptimistic) PopulateDate() RKE.EnableReturnKey(Me, True) //' Now you can use Return Key to move through contols insted of Tab Key End Sub","title":"Tutorial"},{"location":"DC/ReturnKey%20Enabled/#contact-us-","text":"Home Page: http://www.tools4vb.com Sales Email: sales@tools4vb.com Support Email: support@tools4vb.com","title":"Contact us -----"},{"location":"DC/ReturnKey%20Enabled/#license-","text":"Copyright \u00a92004 DynamicComponenets Software. All rights reserved The software described in this document is furnished under a license agreement and may be used or copied only in accordance with the terms of the agreement. YOU MAY: \\1. Install and use the unlimited number of copies of the TRIAL VERSION. \\2. Use one or more copies of the TRIAL VERSION for evaluation purposes only. \\3. Copy and distribute freely the TRIAL VERSION YOU MAY NOT: \\1. Sublicense, rent or lease the TRIAL VERSION or any portion of it. \\2. Decompile, disassemble, reverse engineer or modify the TRIAL VERSION DISTRIBUTION: You are hereby licensed to make as many copies of the TRIAL VERSION as you wish and distribute them to anyone provided that all files are intact. You must distribute the install form of the TRIAL VERSION (not the files resulting of an installation). You are not allowed to sell the TRIAL VERSION Computer's Magazines are authorized to distribute it on any Cover Disk or CD-ROM without any permission. Please inform us by e-mail .","title":"License -----"},{"location":"DC/ReturnKey%20Enabled/#how-to-order-","text":"Check the http://www.tools4vb.com for the latest pricing and product information. you can buy this product online easily and securely and you will get the registration key immediately.","title":"How to order -----"},{"location":"DC/ReturnKey%20Enabled/#how-to-register-your-copy","text":"After your request we will email you with registration key Enter your name and registration key , and enjoy programming with DC.DataManger","title":"How to Register your Copy"},{"location":"DC/ReturnKey%20Enabled/#author-informaion-","text":"Company : EgyFirst Software , inc . URL : http://www.tools4vb.com Product : DC ReturnKeyEnable Version: 1.0","title":"Author Informaion-----"},{"location":"ML/","text":"ML Bytes DenMune Clustering Algorithm ReadMe Documentation GitHub","title":"Machine Learning"},{"location":"ML/#ml-bytes","text":"DenMune Clustering Algorithm ReadMe Documentation GitHub","title":"ML Bytes"},{"location":"ML/denmune/","text":"DenMune: A density-peak clustering algorithm DenMune a clustering algorithm that can find clusters of arbitrary size, shapes and densities in two-dimensions. Higher dimensions are first reduced to 2-D using the t-sne. The algorithm relies on a single parameter K (the number of nearest neighbors). The results show the superiority of the algorithm. Enjoy the simplicity but the power of DenMune. Scientific Work Paper Journal Data Coding & Maintenance Git Repo Code Style Installation CI Workflow Code Coverage Docs & Tutorials Read the Docs Repo2Docker Colab kaggle ReviewNB Downloads Stats downloads/day download/week download/month Suggestions & Reporting Issues Github Gitter Slack Based on the paper Paper Mohamed Abbas, Adel El-Zoghabi, Amin Shoukry, DenMune: Density peak based clustering using mutual nearest neighbors In: Journal of Pattern Recognition, Elsevier, volume 109, number 107589, January 2021 DOI: https://doi.org/10.1016/j.patcog.2020.107589 Documentation: Documentation, including tutorials, are available on https://denmune.readthedocs.io [![read the documentation](https://img.shields.io/badge/read_the-docs-orange)](https://denmune.readthedocs.io/en/latest/?badge=latest) Watch it in action This 30 seconds will tell you how a density-based algorithm, DenMune propagates: When less means more Most calssic clustering algorithms fail in detecting complex clusters where clusters are of different size, shape, density, and being exist in noisy data. Recently, a density-based algorithm named DenMune showed great ability in detecting complex shapes even in noisy data. it can detect number of clusters automatically, detect both pre-identified-noise and post-identified-noise automatically and removing them. It can achieve accuracy reach 100% in some classic pattern problems, achieve 97% in MNIST dataset. A great advantage of this algorithm is being single-parameter algorithm. All you need is to set number of k-nearest neighbor and the algorithm will care about the rest. Being Non-sensitive to changes in k, make it robust and stable. Keep in mind, the algorithm reduce any N-D dataset to only 2-D dataset initially, so it is a good benefit of this algorithm is being always to plot your data and explore it which make this algorithm a good candidate for data exploration. Finally, the algorithm comes with neat package for visualizing data, validating it and analyze the whole clustering process. How to install DenMune Simply install DenMune clustering algorithm using pip command from the official Python repository From the shell run the command shell pip install denmune From Jupyter notebook cell run the command ipython3 !pip install denmune How to use DenMune Once DenMune is installed, you just need to import it python from denmune import DenMune ###### Please note that first denmune (the package) in small letters, while the other one(the class itself) has D and M in capital case. Read data There are four possible cases of data: - only train data without labels - only labeled train data - labeled train data in addition to test data without labels - labeled train data in addition to labeled test data ```python #============================================= # First scenario: train data without labels # ============================================ data_path = 'datasets/denmune/chameleon/' dataset = \"t7.10k.csv\" data_file = data_path + dataset # train data without labels X_train = pd.read_csv(data_file, sep=',', header=None) knn = 39 # k-nearest neighbor, the only parameter required by the algorithm dm = DenMune(train_data=X_train, k_nearest=knn) labels, validity = dm.fit_predict(show_analyzer=False, show_noise=True) ``` This is an intuitive dataset which has no groundtruth provided ```python #============================================= # Second scenario: train data with labels # ============================================ data_path = 'datasets/denmune/shapes/' dataset = \"aggregation.csv\" data_file = data_path + dataset # train data with labels X_train = pd.read_csv(data_file, sep=',', header=None) y_train = X_train.iloc[:, -1] X_train = X_train.drop(X_train.columns[-1], axis=1) knn = 6 # k-nearest neighbor, the only parameter required by the algorithm dm = DenMune(train_data=X_train, train_truth= y_train, k_nearest=knn) labels, validity = dm.fit_predict(show_analyzer=False, show_noise=True) ``` Datset groundtruth Dataset as detected by DenMune at k=6 ```python #================================================================= # Third scenario: train data with labels in addition to test data # ================================================================ data_path = 'datasets/denmune/pendigits/' file_2d = data_path + 'pendigits-2d.csv' # train data with labels X_train = pd.read_csv(data_path + 'train.csv', sep=',', header=None) y_train = X_train.iloc[:, -1] X_train = X_train.drop(X_train.columns[-1], axis=1) # test data without labels X_test = pd.read_csv(data_path + 'test.csv', sep=',', header=None) X_test = X_test.drop(X_test.columns[-1], axis=1) knn = 50 # k-nearest neighbor, the only parameter required by the algorithm dm = DenMune(train_data=X_train, train_truth= y_train, test_data= X_test, k_nearest=knn) labels, validity = dm.fit_predict(show_analyzer=True, show_noise=True) ``` dataset groundtruth dataset as detected by DenMune at k=50 test data as predicted by DenMune on training the dataset at k=50 Algorithm's Parameters Parameters used within the initialization of the DenMune class python def __init__ (self, train_data=None, test_data=None, train_truth=None, test_truth=None, file_2d =None, k_nearest=None, rgn_tsne=False, prop_step=0, ): train_data: data used for training the algorithm default: None. It should be provided by the use, otherwise an error will raise. train_truth: labels of training data default: None test_data: data used for testing the algorithm test_truth: labels of testing data default: None k_nearest: number of nearest neighbor default: 0. the default is invalid. k-nearest neighbor should be at least 1. rgn_tsn: when set to True: It will regenerate the reduced 2-D version of the N-D dataset each time the algorithm run. when set to False: It will generate the reduced 2-D version of the N-D dataset first time only, then will reuse the saved exist file default: True file_2d: name (include location) of file used save/load the reduced 2-d version if empty: the algorithm will create temporary file named '_temp_2d' default: None prop_step: size of increment used in showing the clustering propagation. leave this parameter set to 0, the default value, unless you are willing intentionally to enter the propagation mode. default: 0 Parameters used within the fit_predict function: python def fit_predict(self, validate=True, show_plots=True, show_noise=True, show_analyzer=True ): validate: validate data on/off according to five measures integrated with DenMune (Accuracy. F1-score, NMI index, AMI index, ARI index) default: True show_plots: show/hide plotting of data default: True show_noise: show/hide noise and outlier default: True show_analyzer: show/hide the analyzer default: True The Analyzer The algorithm provide an exploratory tool called analyzer, once called it will provide you with in-depth analysis on how your clustering results perform. Noise Detection DenMune detects noise and outlier automatically, no need to any further work from your side. It plots pre-identified noise in black It plots post-identified noise in light grey You can set show_noise parameter to False. ```python # let us show noise m = DenMune(train_data=X_train, k_nearest=knn) labels, validity = dm.fit_predict(show_noise=True) ``` ```python # let us show clean data by removing noise m = DenMune(train_data=X_train, k_nearest=knn) labels, validity = dm.fit_predict(show_noise=False) ``` noisy data clean data Validatation You can get your validation results using 3 methods by showing the Analyzer extract values from the validity returned list from fit_predict function extract values from the Analyzer dictionary - There are five validity measures built-in the algorithm, which are: ACC, Accuracy F1 score NMI index (Normalized Mutual Information) AMI index (Adjusted Mutual Information) ARI index (Adjusted Rand Index) K-nearest Evolution The following chart shows the evolution of pre and post identified noise in correspondence to increase of number of knn. Also, detected number of clusters is analyzed in the same chart in relation with both types of identified noise. The Scalability data size time data size: 5000 time: 2.3139 seconds data size: 10000 time: 5.8752 seconds data size: 15000 time: 12.4535 seconds data size: 20000 time: 18.8466 seconds data size: 25000 time: 28.992 seconds data size: 30000 time: 39.3166 seconds data size: 35000 time: 39.4842 seconds data size: 40000 time: 63.7649 seconds data size: 45000 time: 73.6828 seconds data size: 50000 time: 86.9194 seconds data size: 55000 time: 90.1077 seconds data size: 60000 time: 125.0228 seconds data size: 65000 time: 149.1858 seconds data size: 70000 time: 177.4184 seconds data size: 75000 time: 204.0712 seconds data size: 80000 time: 220.502 seconds data size: 85000 time: 251.7625 seconds data size: 100000 time: 257.563 seconds | The Stability The algorithm is only single-parameter, even more it not sensitive to changes in that parameter, k. You may guess that from the following chart yourself. This is of great benefit for you as a data exploration analyst. You can simply explore the dataset using an arbitrary k. Being Non-sensitive to changes in k, make it robust and stable. Reveal the propagation one of the top performing feature in this algorithm is enabling you to watch how your clusters propagate to construct the final output clusters. just use the parameter 'prop_step' as in the following example: ```python dataset = \"t7.10k\" # data_path = 'datasets/denmune/chameleon/' # train file data_file = data_path + dataset +'.csv' X_train = pd.read_csv(data_file, sep=',', header=None) from itertools import chain # Denmune's Paramaters knn = 39 # number of k-nearest neighbor, the only parameter required by the algorithm # create list of differnt snapshots of the propagation snapshots = chain(range(2,5), range(5,50,10), range(50, 100, 25), range(100,500,100), range(500,2000, 250), range(1000,5500, 500)) from IPython.display import clear_output for snapshot in snapshots: print (\"itration\", snapshot ) clear_output(wait=True) dm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False, prop_step=snapshot) labels, validity = dm.fit_predict(show_analyzer=False, show_noise=False) ``` Interact with the algorithm This notebook allows you interact with the algorithm in many aspects: - you can choose which dataset to cluster (among 4 chameleon datasets) - you can decide which number of k-nearest neighbor to use - show noise on/off; thus you can invesetigate noise detected by the algorithm - show analyzer on/off How to run and test Launch Examples in Repo2Docker Binder Simply use our repo2docker offered by mybinder.org, which encapsulate the algorithm and all required data in one virtual machine instance. All Jupyter notebooks examples found in this repository will be also available to you in action to practice in this respo2docer. Thanks mybinder.org, you made it possible! 2. Launch each Example in Google Research, CoLab Need to test examples one by one, then here another option. Use colab offered by google research to test each example individually. Here is a list of Google CoLab URL to use the algorithm interactively ---------------------------------------------------------------------- Dataset CoLab URL How to use it - colab Chameleon datasets - colab 2D Shape datasets - colab MNIST dataset - colab iris dataset - colab Get 97% by training MNIST dataset - colab Non-groundtruth datasets - colab Noise detection - colab Validation - colab How it propagates - colab Snapshots of propagation - colab Scalability - colab Stability vs number of nearest neighbors - colab k-nearest-evolution - colab 3. Launch each Example in Kaggle workspace If you are a kaggler like me, then Kaggle, the best workspace where data scientist meet, should fit you to test the algorithm with great experience. | Dataset | Kaggle URL | | ---------------------------------------- | ------------------------------------------------------------ | | When less means more - kaggle | [![When less means more - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)]( https://www.kaggle.com/egyfirst/when-less-means-more) | | Non-groundtruth datasets - kaggle | [![Non-groundtruth datasets](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/detecting-non-groundtruth-datasets) | | 2D Shape datasets - kaggle | [![2D Shape datasets - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/detection-of-2d-shape-datasets) | | MNIST dataset kaggle | [![MNIST dataset - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/get-97-using-simple-yet-one-parameter-algorithm) | | Iris dataset kaggle | [![iris dataset - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/denmune-clustering-iris-dataset) | | Training MNIST to get 97% | [![Training MNIST to get 97%](https://kaggle.com/static/images/open-in-kaggle.svg)]( https://www.kaggle.com/egyfirst/training-mnist-dataset-to-get-97) | | Noise detection - kaggle | [![Noise detection - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)]( https://www.kaggle.com/egyfirst/noise-detection) | | Validation - kaggle | [![Validation - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/validate-in-5-built-in-validity-insexes) | | The beauty of propagation - kaggle | [![The beauty of propagation - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/the-beauty-of-clusters-propagation) | | The beauty of propagation part2 - kaggle | [![The beauty of propagation part 2 - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/the-beauty-of-propagation-part2) | | Snapshots of propagation -kaggle | [![The beauty of propagation - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/beauty-of-propagation-part3) | | Scalability kaggle | [![Scalability - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/scalability-vs-speed) | | Stability - kaggle | [![Stability - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/stability-vs-number-of-nearest-neighbor) | | k-nearest-evolution - kaggle | [![k-nearest-evolution - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/k-nearest-evolution) | How to cite ===== If you have used this codebase in a scientific publication and wish to cite it, please use the Journal of Pattern Recognition article Mohamed Abbas McInnes, Adel El-Zoghaby, Amin Ahoukry, *DenMune: Density peak based clustering using mutual nearest neighbors* In: Journal of Pattern Recognition, Elsevier, volume 109, number 107589. January 2021 bib @article{ABBAS2021107589, title = {DenMune: Density peak based clustering using mutual nearest neighbors}, journal = {Pattern Recognition}, volume = {109}, pages = {107589}, year = {2021}, issn = {0031-3203}, doi = {https://doi.org/10.1016/j.patcog.2020.107589}, url = {https://www.sciencedirect.com/science/article/pii/S0031320320303927}, author = {Mohamed Abbas and Adel El-Zoghabi and Amin Shoukry}, keywords = {Clustering, Mutual neighbors, Dimensionality reduction, Arbitrary shapes, Pattern recognition, Nearest neighbors, Density peak}, abstract = {Many clustering algorithms fail when clusters are of arbitrary shapes, of varying densities, or the data classes are unbalanced and close to each other, even in two dimensions. A novel clustering algorithm \u201cDenMune\u201d is presented to meet this challenge. It is based on identifying dense regions using mutual nearest neighborhoods of size K, where K is the only parameter required from the user, besides obeying the mutual nearest neighbor consistency principle. The algorithm is stable for a wide range of values of K. Moreover, it is able to automatically detect and remove noise from the clustering process as well as detecting the target clusters. It produces robust results on various low and high dimensional datasets relative to several known state of the art clustering algorithms.} } Licensing The DenMune algorithm is 3-clause BSD licensed. Enjoy. Task List [x] Update Github with the DenMune sourcode [x] create repo2docker repository [x] Create pip Package [x] create CoLab shared examples [x] create documentation [x] create Kaggle shared examples [x] PEP8 compliant [x] Continuous integration [x] scikit-learn compatible [x] creating unit tests (coverage: 100%) [x] generating API documentation [ ] create conda package","title":"DenMune: A density-peak clustering algorithm"},{"location":"ML/denmune/#denmune-a-density-peak-clustering-algorithm","text":"DenMune a clustering algorithm that can find clusters of arbitrary size, shapes and densities in two-dimensions. Higher dimensions are first reduced to 2-D using the t-sne. The algorithm relies on a single parameter K (the number of nearest neighbors). The results show the superiority of the algorithm. Enjoy the simplicity but the power of DenMune. Scientific Work Paper Journal Data Coding & Maintenance Git Repo Code Style Installation CI Workflow Code Coverage Docs & Tutorials Read the Docs Repo2Docker Colab kaggle ReviewNB Downloads Stats downloads/day download/week download/month Suggestions & Reporting Issues Github Gitter Slack Based on the paper Paper Mohamed Abbas, Adel El-Zoghabi, Amin Shoukry, DenMune: Density peak based clustering using mutual nearest neighbors In: Journal of Pattern Recognition, Elsevier, volume 109, number 107589, January 2021 DOI: https://doi.org/10.1016/j.patcog.2020.107589 Documentation: Documentation, including tutorials, are available on https://denmune.readthedocs.io [![read the documentation](https://img.shields.io/badge/read_the-docs-orange)](https://denmune.readthedocs.io/en/latest/?badge=latest) Watch it in action This 30 seconds will tell you how a density-based algorithm, DenMune propagates: When less means more Most calssic clustering algorithms fail in detecting complex clusters where clusters are of different size, shape, density, and being exist in noisy data. Recently, a density-based algorithm named DenMune showed great ability in detecting complex shapes even in noisy data. it can detect number of clusters automatically, detect both pre-identified-noise and post-identified-noise automatically and removing them. It can achieve accuracy reach 100% in some classic pattern problems, achieve 97% in MNIST dataset. A great advantage of this algorithm is being single-parameter algorithm. All you need is to set number of k-nearest neighbor and the algorithm will care about the rest. Being Non-sensitive to changes in k, make it robust and stable. Keep in mind, the algorithm reduce any N-D dataset to only 2-D dataset initially, so it is a good benefit of this algorithm is being always to plot your data and explore it which make this algorithm a good candidate for data exploration. Finally, the algorithm comes with neat package for visualizing data, validating it and analyze the whole clustering process. How to install DenMune Simply install DenMune clustering algorithm using pip command from the official Python repository From the shell run the command shell pip install denmune From Jupyter notebook cell run the command ipython3 !pip install denmune How to use DenMune Once DenMune is installed, you just need to import it python from denmune import DenMune ###### Please note that first denmune (the package) in small letters, while the other one(the class itself) has D and M in capital case. Read data There are four possible cases of data: - only train data without labels - only labeled train data - labeled train data in addition to test data without labels - labeled train data in addition to labeled test data ```python #============================================= # First scenario: train data without labels # ============================================ data_path = 'datasets/denmune/chameleon/' dataset = \"t7.10k.csv\" data_file = data_path + dataset # train data without labels X_train = pd.read_csv(data_file, sep=',', header=None) knn = 39 # k-nearest neighbor, the only parameter required by the algorithm dm = DenMune(train_data=X_train, k_nearest=knn) labels, validity = dm.fit_predict(show_analyzer=False, show_noise=True) ``` This is an intuitive dataset which has no groundtruth provided ```python #============================================= # Second scenario: train data with labels # ============================================ data_path = 'datasets/denmune/shapes/' dataset = \"aggregation.csv\" data_file = data_path + dataset # train data with labels X_train = pd.read_csv(data_file, sep=',', header=None) y_train = X_train.iloc[:, -1] X_train = X_train.drop(X_train.columns[-1], axis=1) knn = 6 # k-nearest neighbor, the only parameter required by the algorithm dm = DenMune(train_data=X_train, train_truth= y_train, k_nearest=knn) labels, validity = dm.fit_predict(show_analyzer=False, show_noise=True) ``` Datset groundtruth Dataset as detected by DenMune at k=6 ```python #================================================================= # Third scenario: train data with labels in addition to test data # ================================================================ data_path = 'datasets/denmune/pendigits/' file_2d = data_path + 'pendigits-2d.csv' # train data with labels X_train = pd.read_csv(data_path + 'train.csv', sep=',', header=None) y_train = X_train.iloc[:, -1] X_train = X_train.drop(X_train.columns[-1], axis=1) # test data without labels X_test = pd.read_csv(data_path + 'test.csv', sep=',', header=None) X_test = X_test.drop(X_test.columns[-1], axis=1) knn = 50 # k-nearest neighbor, the only parameter required by the algorithm dm = DenMune(train_data=X_train, train_truth= y_train, test_data= X_test, k_nearest=knn) labels, validity = dm.fit_predict(show_analyzer=True, show_noise=True) ``` dataset groundtruth dataset as detected by DenMune at k=50 test data as predicted by DenMune on training the dataset at k=50 Algorithm's Parameters Parameters used within the initialization of the DenMune class python def __init__ (self, train_data=None, test_data=None, train_truth=None, test_truth=None, file_2d =None, k_nearest=None, rgn_tsne=False, prop_step=0, ): train_data: data used for training the algorithm default: None. It should be provided by the use, otherwise an error will raise. train_truth: labels of training data default: None test_data: data used for testing the algorithm test_truth: labels of testing data default: None k_nearest: number of nearest neighbor default: 0. the default is invalid. k-nearest neighbor should be at least 1. rgn_tsn: when set to True: It will regenerate the reduced 2-D version of the N-D dataset each time the algorithm run. when set to False: It will generate the reduced 2-D version of the N-D dataset first time only, then will reuse the saved exist file default: True file_2d: name (include location) of file used save/load the reduced 2-d version if empty: the algorithm will create temporary file named '_temp_2d' default: None prop_step: size of increment used in showing the clustering propagation. leave this parameter set to 0, the default value, unless you are willing intentionally to enter the propagation mode. default: 0 Parameters used within the fit_predict function: python def fit_predict(self, validate=True, show_plots=True, show_noise=True, show_analyzer=True ): validate: validate data on/off according to five measures integrated with DenMune (Accuracy. F1-score, NMI index, AMI index, ARI index) default: True show_plots: show/hide plotting of data default: True show_noise: show/hide noise and outlier default: True show_analyzer: show/hide the analyzer default: True The Analyzer The algorithm provide an exploratory tool called analyzer, once called it will provide you with in-depth analysis on how your clustering results perform. Noise Detection DenMune detects noise and outlier automatically, no need to any further work from your side. It plots pre-identified noise in black It plots post-identified noise in light grey You can set show_noise parameter to False. ```python # let us show noise m = DenMune(train_data=X_train, k_nearest=knn) labels, validity = dm.fit_predict(show_noise=True) ``` ```python # let us show clean data by removing noise m = DenMune(train_data=X_train, k_nearest=knn) labels, validity = dm.fit_predict(show_noise=False) ``` noisy data clean data Validatation You can get your validation results using 3 methods by showing the Analyzer extract values from the validity returned list from fit_predict function extract values from the Analyzer dictionary - There are five validity measures built-in the algorithm, which are: ACC, Accuracy F1 score NMI index (Normalized Mutual Information) AMI index (Adjusted Mutual Information) ARI index (Adjusted Rand Index) K-nearest Evolution The following chart shows the evolution of pre and post identified noise in correspondence to increase of number of knn. Also, detected number of clusters is analyzed in the same chart in relation with both types of identified noise. The Scalability data size time data size: 5000 time: 2.3139 seconds data size: 10000 time: 5.8752 seconds data size: 15000 time: 12.4535 seconds data size: 20000 time: 18.8466 seconds data size: 25000 time: 28.992 seconds data size: 30000 time: 39.3166 seconds data size: 35000 time: 39.4842 seconds data size: 40000 time: 63.7649 seconds data size: 45000 time: 73.6828 seconds data size: 50000 time: 86.9194 seconds data size: 55000 time: 90.1077 seconds data size: 60000 time: 125.0228 seconds data size: 65000 time: 149.1858 seconds data size: 70000 time: 177.4184 seconds data size: 75000 time: 204.0712 seconds data size: 80000 time: 220.502 seconds data size: 85000 time: 251.7625 seconds data size: 100000 time: 257.563 seconds | The Stability The algorithm is only single-parameter, even more it not sensitive to changes in that parameter, k. You may guess that from the following chart yourself. This is of great benefit for you as a data exploration analyst. You can simply explore the dataset using an arbitrary k. Being Non-sensitive to changes in k, make it robust and stable. Reveal the propagation one of the top performing feature in this algorithm is enabling you to watch how your clusters propagate to construct the final output clusters. just use the parameter 'prop_step' as in the following example: ```python dataset = \"t7.10k\" # data_path = 'datasets/denmune/chameleon/' # train file data_file = data_path + dataset +'.csv' X_train = pd.read_csv(data_file, sep=',', header=None) from itertools import chain # Denmune's Paramaters knn = 39 # number of k-nearest neighbor, the only parameter required by the algorithm # create list of differnt snapshots of the propagation snapshots = chain(range(2,5), range(5,50,10), range(50, 100, 25), range(100,500,100), range(500,2000, 250), range(1000,5500, 500)) from IPython.display import clear_output for snapshot in snapshots: print (\"itration\", snapshot ) clear_output(wait=True) dm = DenMune(train_data=X_train, k_nearest=knn, rgn_tsne=False, prop_step=snapshot) labels, validity = dm.fit_predict(show_analyzer=False, show_noise=False) ``` Interact with the algorithm This notebook allows you interact with the algorithm in many aspects: - you can choose which dataset to cluster (among 4 chameleon datasets) - you can decide which number of k-nearest neighbor to use - show noise on/off; thus you can invesetigate noise detected by the algorithm - show analyzer on/off How to run and test Launch Examples in Repo2Docker Binder Simply use our repo2docker offered by mybinder.org, which encapsulate the algorithm and all required data in one virtual machine instance. All Jupyter notebooks examples found in this repository will be also available to you in action to practice in this respo2docer. Thanks mybinder.org, you made it possible! 2. Launch each Example in Google Research, CoLab Need to test examples one by one, then here another option. Use colab offered by google research to test each example individually. Here is a list of Google CoLab URL to use the algorithm interactively ---------------------------------------------------------------------- Dataset CoLab URL How to use it - colab Chameleon datasets - colab 2D Shape datasets - colab MNIST dataset - colab iris dataset - colab Get 97% by training MNIST dataset - colab Non-groundtruth datasets - colab Noise detection - colab Validation - colab How it propagates - colab Snapshots of propagation - colab Scalability - colab Stability vs number of nearest neighbors - colab k-nearest-evolution - colab 3. Launch each Example in Kaggle workspace If you are a kaggler like me, then Kaggle, the best workspace where data scientist meet, should fit you to test the algorithm with great experience. | Dataset | Kaggle URL | | ---------------------------------------- | ------------------------------------------------------------ | | When less means more - kaggle | [![When less means more - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)]( https://www.kaggle.com/egyfirst/when-less-means-more) | | Non-groundtruth datasets - kaggle | [![Non-groundtruth datasets](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/detecting-non-groundtruth-datasets) | | 2D Shape datasets - kaggle | [![2D Shape datasets - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/detection-of-2d-shape-datasets) | | MNIST dataset kaggle | [![MNIST dataset - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/get-97-using-simple-yet-one-parameter-algorithm) | | Iris dataset kaggle | [![iris dataset - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/denmune-clustering-iris-dataset) | | Training MNIST to get 97% | [![Training MNIST to get 97%](https://kaggle.com/static/images/open-in-kaggle.svg)]( https://www.kaggle.com/egyfirst/training-mnist-dataset-to-get-97) | | Noise detection - kaggle | [![Noise detection - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)]( https://www.kaggle.com/egyfirst/noise-detection) | | Validation - kaggle | [![Validation - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/validate-in-5-built-in-validity-insexes) | | The beauty of propagation - kaggle | [![The beauty of propagation - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/the-beauty-of-clusters-propagation) | | The beauty of propagation part2 - kaggle | [![The beauty of propagation part 2 - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/the-beauty-of-propagation-part2) | | Snapshots of propagation -kaggle | [![The beauty of propagation - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/beauty-of-propagation-part3) | | Scalability kaggle | [![Scalability - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/scalability-vs-speed) | | Stability - kaggle | [![Stability - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/stability-vs-number-of-nearest-neighbor) | | k-nearest-evolution - kaggle | [![k-nearest-evolution - kaggle](https://kaggle.com/static/images/open-in-kaggle.svg)](https://www.kaggle.com/egyfirst/k-nearest-evolution) | How to cite ===== If you have used this codebase in a scientific publication and wish to cite it, please use the Journal of Pattern Recognition article Mohamed Abbas McInnes, Adel El-Zoghaby, Amin Ahoukry, *DenMune: Density peak based clustering using mutual nearest neighbors* In: Journal of Pattern Recognition, Elsevier, volume 109, number 107589. January 2021 bib @article{ABBAS2021107589, title = {DenMune: Density peak based clustering using mutual nearest neighbors}, journal = {Pattern Recognition}, volume = {109}, pages = {107589}, year = {2021}, issn = {0031-3203}, doi = {https://doi.org/10.1016/j.patcog.2020.107589}, url = {https://www.sciencedirect.com/science/article/pii/S0031320320303927}, author = {Mohamed Abbas and Adel El-Zoghabi and Amin Shoukry}, keywords = {Clustering, Mutual neighbors, Dimensionality reduction, Arbitrary shapes, Pattern recognition, Nearest neighbors, Density peak}, abstract = {Many clustering algorithms fail when clusters are of arbitrary shapes, of varying densities, or the data classes are unbalanced and close to each other, even in two dimensions. A novel clustering algorithm \u201cDenMune\u201d is presented to meet this challenge. It is based on identifying dense regions using mutual nearest neighborhoods of size K, where K is the only parameter required from the user, besides obeying the mutual nearest neighbor consistency principle. The algorithm is stable for a wide range of values of K. Moreover, it is able to automatically detect and remove noise from the clustering process as well as detecting the target clusters. It produces robust results on various low and high dimensional datasets relative to several known state of the art clustering algorithms.} } Licensing The DenMune algorithm is 3-clause BSD licensed. Enjoy. Task List [x] Update Github with the DenMune sourcode [x] create repo2docker repository [x] Create pip Package [x] create CoLab shared examples [x] create documentation [x] create Kaggle shared examples [x] PEP8 compliant [x] Continuous integration [x] scikit-learn compatible [x] creating unit tests (coverage: 100%) [x] generating API documentation [ ] create conda package","title":"DenMune: A density-peak clustering algorithm"}]}